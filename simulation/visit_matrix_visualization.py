{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import csv "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#load Core_POI file\n",
    "core_file = csv.reader(open('core_poi_OKCity.csv',\"r\"),delimiter=\",\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "ename": "UnpicklingError",
     "evalue": "pickle data was truncated",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m\u001b[0m",
      "\u001b[0;31mUnpicklingError\u001b[0mTraceback (most recent call last)",
      "\u001b[0;32m<ipython-input-3-38f63685f6e8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#load pickle file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m#vistMatrices contains three import files, accessible through three keys: poi_cbg_visit_matrix_history, cbgs_idxs_to_ids, pois_idxs_to_ids\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mvisitMatrices\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpickle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Oklahoma_Jan06_fullweek_dict.pkl'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m'rb'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mUnpicklingError\u001b[0m: pickle data was truncated"
     ]
    }
   ],
   "source": [
    "#load pickle file\n",
    "#vistMatrices contains three import files, accessible through three keys: poi_cbg_visit_matrix_history, cbgs_idxs_to_ids, pois_idxs_to_ids\n",
    "visitMatrices = pickle.load(open('Oklahoma_Jan06_fullweek_dict.pkl','rb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'visitMatrices' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m\u001b[0m",
      "\u001b[0;31mNameError\u001b[0mTraceback (most recent call last)",
      "\u001b[0;32m<ipython-input-4-03859170e6f7>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;31m#load actual visit matrix (this is 3D)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;31m# poi_cbg_visit_matrix_history[1] gives for first hour, what's the mapping\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mpoi_cbg_visit_matrix_history\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mvisitMatrices\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'poi_cbg_visit_matrix_history'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m: name 'visitMatrices' is not defined"
     ]
    }
   ],
   "source": [
    "#load actual visit matrix (this is 3D)\n",
    "# poi_cbg_visit_matrix_history[1] gives for first hour, what's the mapping \n",
    "poi_cbg_visit_matrix_history = visitMatrices['poi_cbg_visit_matrix_history']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 35703 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 56631 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 51430 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 53248 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 58251 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 83772 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 138138 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 206808 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 262282 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 281463 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 292740 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 318591 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 330057 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 330052 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 324041 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 320061 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 312154 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 325448 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 335789 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 324417 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 289337 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 204194 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 151664 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 110989 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 84423 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 66743 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 50845 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 49081 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 57946 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 84492 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 142145 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 218192 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 266596 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 288810 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 301637 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 321702 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 332756 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 331244 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 322034 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 310100 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 314250 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 326056 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 332480 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 327791 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 296109 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 217398 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 152775 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 112847 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 83599 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 66222 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 54404 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 50942 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 59563 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 89620 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 145549 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 217279 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 268403 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 294450 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 304064 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 324161 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 333961 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 334251 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 322873 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 318055 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 320489 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 331059 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 338749 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 333895 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 298180 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 220182 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 154533 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 111579 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 89848 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 64934 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 57421 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 55340 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 60966 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 90099 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 145677 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 216077 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 273796 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 291794 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 302230 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 327329 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 339545 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 338871 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 323269 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 317781 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 319062 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 336402 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 341253 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 333270 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 301965 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 226474 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 163881 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 122709 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 102259 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 78613 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 64427 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 56378 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 60619 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 88997 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 148208 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 219807 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 271012 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 292573 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 307277 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 333224 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 339725 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 340542 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 331251 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 323995 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 317219 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 335818 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 345680 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 338183 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 307013 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 242287 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 187787 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 147801 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 110236 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 79138 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 67359 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 57592 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 60123 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 67438 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 84898 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 124486 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 177009 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 218257 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 250416 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 275155 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 291095 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 294583 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 293596 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 287315 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 279274 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 302605 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 315216 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 308575 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 286474 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 235830 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 192737 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 152090 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 120857 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 96202 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 80242 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 62400 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 55399 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 54522 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 75072 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 99859 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 132607 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 175037 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 220743 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 255217 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 274464 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 281574 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 276421 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 270057 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 264879 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 282628 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 289639 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 285601 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 259086 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 180627 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 131690 stored elements in Compressed Sparse Row format>,\n",
       " <6871x2554 sparse matrix of type '<class 'numpy.float64'>'\n",
       " \twith 97246 stored elements in Compressed Sparse Row format>]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poi_cbg_visit_matrix_history"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "#load cbg# mapping to actual government issued 12digit CBG#  this is a dictionary data structure\n",
    "cbg_to_12digit = visitMatrices['cbgs_idxs_to_ids']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{0: 40159507041,\n",
       " 1: 40250015002,\n",
       " 2: 50070201014,\n",
       " 3: 50070204052,\n",
       " 4: 50070206031,\n",
       " 5: 50070206061,\n",
       " 6: 50070208052,\n",
       " 7: 50070212011,\n",
       " 8: 50070213082,\n",
       " 9: 50070213103,\n",
       " 10: 50070213111,\n",
       " 11: 50070214071,\n",
       " 12: 50159505004,\n",
       " 13: 50330202012,\n",
       " 14: 50330202031,\n",
       " 15: 50330202041,\n",
       " 16: 50330206001,\n",
       " 17: 50330206004,\n",
       " 18: 50450301031,\n",
       " 19: 50450308003,\n",
       " 20: 50450310052,\n",
       " 21: 50690021032,\n",
       " 22: 50850201011,\n",
       " 23: 51250101023,\n",
       " 24: 51250105101,\n",
       " 25: 51310006003,\n",
       " 26: 51310012013,\n",
       " 27: 51310013023,\n",
       " 28: 51310013044,\n",
       " 29: 51310101011,\n",
       " 30: 51310101013,\n",
       " 31: 51310101023,\n",
       " 32: 51310103011,\n",
       " 33: 51310103013,\n",
       " 34: 51310103021,\n",
       " 35: 51430101051,\n",
       " 36: 51430101052,\n",
       " 37: 51430104032,\n",
       " 38: 51430105012,\n",
       " 39: 51430105033,\n",
       " 40: 51430105061,\n",
       " 41: 51430105062,\n",
       " 42: 51430105072,\n",
       " 43: 51430105084,\n",
       " 44: 51430105091,\n",
       " 45: 51430107012,\n",
       " 46: 51430110012,\n",
       " 47: 51430110013,\n",
       " 48: 51430111012,\n",
       " 49: 51430113004,\n",
       " 50: 60290017003,\n",
       " 51: 60650426202,\n",
       " 52: 60710127001,\n",
       " 53: 60730164013,\n",
       " 54: 60730210003,\n",
       " 55: 80010085453,\n",
       " 56: 80770017033,\n",
       " 57: 81170004021,\n",
       " 58: 120110502082,\n",
       " 59: 120310144112,\n",
       " 60: 120570001011,\n",
       " 61: 121030257003,\n",
       " 62: 160270211001,\n",
       " 63: 190570010001,\n",
       " 64: 200150202011,\n",
       " 65: 200150202032,\n",
       " 66: 200150206004,\n",
       " 67: 200259671002,\n",
       " 68: 200354938005,\n",
       " 69: 200679637004,\n",
       " 70: 200779617002,\n",
       " 71: 200790301004,\n",
       " 72: 200814631001,\n",
       " 73: 200910522022,\n",
       " 74: 200910534242,\n",
       " 75: 201110001004,\n",
       " 76: 201299646003,\n",
       " 77: 201550018002,\n",
       " 78: 201730053005,\n",
       " 79: 201730060005,\n",
       " 80: 201730066002,\n",
       " 81: 201730072012,\n",
       " 82: 201730072033,\n",
       " 83: 201730072041,\n",
       " 84: 201730077003,\n",
       " 85: 201730081003,\n",
       " 86: 201730095031,\n",
       " 87: 201730095034,\n",
       " 88: 201730095062,\n",
       " 89: 201730095081,\n",
       " 90: 201730095091,\n",
       " 91: 201730096051,\n",
       " 92: 201730096052,\n",
       " 93: 201730099007,\n",
       " 94: 201730100043,\n",
       " 95: 201730101132,\n",
       " 96: 201730101151,\n",
       " 97: 201730101161,\n",
       " 98: 201730102001,\n",
       " 99: 201730103001,\n",
       " 100: 201730103003,\n",
       " 101: 201730103005,\n",
       " 102: 201759657002,\n",
       " 103: 201759657003,\n",
       " 104: 201899651001,\n",
       " 105: 201919624003,\n",
       " 106: 220550014101,\n",
       " 107: 240317008342,\n",
       " 108: 250138124041,\n",
       " 109: 250173261023,\n",
       " 110: 280730204003,\n",
       " 111: 290370601002,\n",
       " 112: 290430202041,\n",
       " 113: 290430203022,\n",
       " 114: 290470213091,\n",
       " 115: 290510202001,\n",
       " 116: 290770022001,\n",
       " 117: 290770041032,\n",
       " 118: 290770043011,\n",
       " 119: 290950159001,\n",
       " 120: 290970102001,\n",
       " 121: 291094702001,\n",
       " 122: 291094704004,\n",
       " 123: 291450206011,\n",
       " 124: 291650303061,\n",
       " 125: 291650304013,\n",
       " 126: 291679604004,\n",
       " 127: 291679604005,\n",
       " 128: 292134802012,\n",
       " 129: 310550075052,\n",
       " 130: 340057042001,\n",
       " 131: 350150008001,\n",
       " 132: 350250009001,\n",
       " 133: 360290150032,\n",
       " 134: 360510307002,\n",
       " 135: 370230212012,\n",
       " 136: 370510024022,\n",
       " 137: 370670033151,\n",
       " 138: 390572102005,\n",
       " 139: 391354701022,\n",
       " 140: 391730209006,\n",
       " 141: 400039556001,\n",
       " 142: 400039557001,\n",
       " 143: 400039560001,\n",
       " 144: 400039560002,\n",
       " 145: 400055876002,\n",
       " 146: 400055877002,\n",
       " 147: 400055877004,\n",
       " 148: 400055878001,\n",
       " 149: 400055879001,\n",
       " 150: 400055879002,\n",
       " 151: 400055879003,\n",
       " 152: 400079516001,\n",
       " 153: 400079517002,\n",
       " 154: 400079518001,\n",
       " 155: 400079518002,\n",
       " 156: 400099661001,\n",
       " 157: 400099661002,\n",
       " 158: 400099661003,\n",
       " 159: 400099661004,\n",
       " 160: 400099661005,\n",
       " 161: 400099661006,\n",
       " 162: 400099661007,\n",
       " 163: 400099662001,\n",
       " 164: 400099662002,\n",
       " 165: 400099662003,\n",
       " 166: 400099662004,\n",
       " 167: 400099662005,\n",
       " 168: 400099662006,\n",
       " 169: 400099665001,\n",
       " 170: 400099665002,\n",
       " 171: 400099668001,\n",
       " 172: 400099668002,\n",
       " 173: 400099668003,\n",
       " 174: 400119586001,\n",
       " 175: 400119586002,\n",
       " 176: 400119587001,\n",
       " 177: 400119587002,\n",
       " 178: 400119588001,\n",
       " 179: 400119588002,\n",
       " 180: 400119589001,\n",
       " 181: 400119589002,\n",
       " 182: 400119589003,\n",
       " 183: 400119589004,\n",
       " 184: 400119590001,\n",
       " 185: 400119590002,\n",
       " 186: 400137956001,\n",
       " 187: 400137959002,\n",
       " 188: 400137960011,\n",
       " 189: 400137960012,\n",
       " 190: 400137960013,\n",
       " 191: 400137960021,\n",
       " 192: 400137960022,\n",
       " 193: 400137960023,\n",
       " 194: 400137961001,\n",
       " 195: 400137961002,\n",
       " 196: 400137962001,\n",
       " 197: 400137962003,\n",
       " 198: 400137965001,\n",
       " 199: 400137966001,\n",
       " 200: 400151616001,\n",
       " 201: 400151616002,\n",
       " 202: 400151616003,\n",
       " 203: 400151616004,\n",
       " 204: 400151617001,\n",
       " 205: 400151617002,\n",
       " 206: 400151618001,\n",
       " 207: 400151618002,\n",
       " 208: 400151618003,\n",
       " 209: 400151619001,\n",
       " 210: 400151619002,\n",
       " 211: 400151620001,\n",
       " 212: 400151620002,\n",
       " 213: 400151620003,\n",
       " 214: 400151620004,\n",
       " 215: 400151621001,\n",
       " 216: 400151621002,\n",
       " 217: 400151621003,\n",
       " 218: 400151621004,\n",
       " 219: 400151621006,\n",
       " 220: 400151621007,\n",
       " 221: 400151621008,\n",
       " 222: 400151622001,\n",
       " 223: 400151622002,\n",
       " 224: 400151622003,\n",
       " 225: 400151623001,\n",
       " 226: 400151623002,\n",
       " 227: 400173001001,\n",
       " 228: 400173001002,\n",
       " 229: 400173001003,\n",
       " 230: 400173002011,\n",
       " 231: 400173002012,\n",
       " 232: 400173002013,\n",
       " 233: 400173002014,\n",
       " 234: 400173002021,\n",
       " 235: 400173002022,\n",
       " 236: 400173002023,\n",
       " 237: 400173003001,\n",
       " 238: 400173003002,\n",
       " 239: 400173003003,\n",
       " 240: 400173004001,\n",
       " 241: 400173004002,\n",
       " 242: 400173005001,\n",
       " 243: 400173005002,\n",
       " 244: 400173005003,\n",
       " 245: 400173005004,\n",
       " 246: 400173006001,\n",
       " 247: 400173006002,\n",
       " 248: 400173007001,\n",
       " 249: 400173007002,\n",
       " 250: 400173007003,\n",
       " 251: 400173007004,\n",
       " 252: 400173008011,\n",
       " 253: 400173008012,\n",
       " 254: 400173008013,\n",
       " 255: 400173008014,\n",
       " 256: 400173008015,\n",
       " 257: 400173008021,\n",
       " 258: 400173008022,\n",
       " 259: 400173009011,\n",
       " 260: 400173009012,\n",
       " 261: 400173009013,\n",
       " 262: 400173009021,\n",
       " 263: 400173009022,\n",
       " 264: 400173009041,\n",
       " 265: 400173009042,\n",
       " 266: 400173009043,\n",
       " 267: 400173009051,\n",
       " 268: 400173009052,\n",
       " 269: 400173009053,\n",
       " 270: 400173010011,\n",
       " 271: 400173010031,\n",
       " 272: 400173010032,\n",
       " 273: 400173010061,\n",
       " 274: 400173010062,\n",
       " 275: 400173010071,\n",
       " 276: 400173010072,\n",
       " 277: 400173010081,\n",
       " 278: 400173010082,\n",
       " 279: 400173010091,\n",
       " 280: 400173011001,\n",
       " 281: 400173011002,\n",
       " 282: 400173011003,\n",
       " 283: 400173011004,\n",
       " 284: 400173012011,\n",
       " 285: 400173012012,\n",
       " 286: 400173012013,\n",
       " 287: 400173012014,\n",
       " 288: 400173012021,\n",
       " 289: 400173012022,\n",
       " 290: 400173013001,\n",
       " 291: 400173013002,\n",
       " 292: 400173013003,\n",
       " 293: 400173014061,\n",
       " 294: 400173014062,\n",
       " 295: 400173014063,\n",
       " 296: 400173014071,\n",
       " 297: 400173014072,\n",
       " 298: 400173014073,\n",
       " 299: 400173014074,\n",
       " 300: 400173014081,\n",
       " 301: 400173014091,\n",
       " 302: 400173014092,\n",
       " 303: 400173014101,\n",
       " 304: 400173014102,\n",
       " 305: 400198921001,\n",
       " 306: 400198921002,\n",
       " 307: 400198921003,\n",
       " 308: 400198922001,\n",
       " 309: 400198922002,\n",
       " 310: 400198923001,\n",
       " 311: 400198923002,\n",
       " 312: 400198924001,\n",
       " 313: 400198924002,\n",
       " 314: 400198924004,\n",
       " 315: 400198925001,\n",
       " 316: 400198925002,\n",
       " 317: 400198925003,\n",
       " 318: 400198925004,\n",
       " 319: 400198926001,\n",
       " 320: 400198926002,\n",
       " 321: 400198926003,\n",
       " 322: 400198926004,\n",
       " 323: 400198926005,\n",
       " 324: 400198927001,\n",
       " 325: 400198927002,\n",
       " 326: 400198927003,\n",
       " 327: 400198928001,\n",
       " 328: 400198928002,\n",
       " 329: 400198928003,\n",
       " 330: 400198928004,\n",
       " 331: 400198928005,\n",
       " 332: 400198929001,\n",
       " 333: 400198929003,\n",
       " 334: 400198930001,\n",
       " 335: 400198930002,\n",
       " 336: 400198930003,\n",
       " 337: 400198930004,\n",
       " 338: 400198930005,\n",
       " 339: 400198930006,\n",
       " 340: 400198931001,\n",
       " 341: 400198931002,\n",
       " 342: 400198931003,\n",
       " 343: 400219776004,\n",
       " 344: 400219777004,\n",
       " 345: 400219778001,\n",
       " 346: 400219778002,\n",
       " 347: 400219778003,\n",
       " 348: 400219779001,\n",
       " 349: 400219780003,\n",
       " 350: 400219781001,\n",
       " 351: 400219781002,\n",
       " 352: 400219781004,\n",
       " 353: 400219783002,\n",
       " 354: 400219783003,\n",
       " 355: 400239669001,\n",
       " 356: 400239670001,\n",
       " 357: 400239673001,\n",
       " 358: 400272002001,\n",
       " 359: 400272002002,\n",
       " 360: 400272002003,\n",
       " 361: 400272003001,\n",
       " 362: 400272003002,\n",
       " 363: 400272003003,\n",
       " 364: 400272004001,\n",
       " 365: 400272004002,\n",
       " 366: 400272005001,\n",
       " 367: 400272005002,\n",
       " 368: 400272005003,\n",
       " 369: 400272005004,\n",
       " 370: 400272006011,\n",
       " 371: 400272006012,\n",
       " 372: 400272006013,\n",
       " 373: 400272006014,\n",
       " 374: 400272006015,\n",
       " 375: 400272006021,\n",
       " 376: 400272006022,\n",
       " 377: 400272006023,\n",
       " 378: 400272008001,\n",
       " 379: 400272008002,\n",
       " 380: 400272008003,\n",
       " 381: 400272008004,\n",
       " 382: 400272009001,\n",
       " 383: 400272009002,\n",
       " 384: 400272009003,\n",
       " 385: 400272010001,\n",
       " 386: 400272010002,\n",
       " 387: 400272010003,\n",
       " 388: 400272010004,\n",
       " 389: 400272010005,\n",
       " 390: 400272010006,\n",
       " 391: 400272011011,\n",
       " 392: 400272011012,\n",
       " 393: 400272011013,\n",
       " 394: 400272011014,\n",
       " 395: 400272011021,\n",
       " 396: 400272011022,\n",
       " 397: 400272011023,\n",
       " 398: 400272012011,\n",
       " 399: 400272012012,\n",
       " 400: 400272012021,\n",
       " 401: 400272012022,\n",
       " 402: 400272012023,\n",
       " 403: 400272012031,\n",
       " 404: 400272012032,\n",
       " 405: 400272012033,\n",
       " 406: 400272013011,\n",
       " 407: 400272013012,\n",
       " 408: 400272013013,\n",
       " 409: 400272013014,\n",
       " 410: 400272014031,\n",
       " 411: 400272014032,\n",
       " 412: 400272014033,\n",
       " 413: 400272014041,\n",
       " 414: 400272014042,\n",
       " 415: 400272014051,\n",
       " 416: 400272014052,\n",
       " 417: 400272014053,\n",
       " 418: 400272014054,\n",
       " 419: 400272015051,\n",
       " 420: 400272015052,\n",
       " 421: 400272015053,\n",
       " 422: 400272015054,\n",
       " 423: 400272015055,\n",
       " 424: 400272015071,\n",
       " 425: 400272015072,\n",
       " 426: 400272015073,\n",
       " 427: 400272015074,\n",
       " 428: 400272015081,\n",
       " 429: 400272015082,\n",
       " 430: 400272015083,\n",
       " 431: 400272015091,\n",
       " 432: 400272015101,\n",
       " 433: 400272015102,\n",
       " 434: 400272015103,\n",
       " 435: 400272015104,\n",
       " 436: 400272016021,\n",
       " 437: 400272016022,\n",
       " 438: 400272016023,\n",
       " 439: 400272016031,\n",
       " 440: 400272016032,\n",
       " 441: 400272016033,\n",
       " 442: 400272016034,\n",
       " 443: 400272016041,\n",
       " 444: 400272016042,\n",
       " 445: 400272016071,\n",
       " 446: 400272016072,\n",
       " 447: 400272016091,\n",
       " 448: 400272016101,\n",
       " 449: 400272016111,\n",
       " 450: 400272016121,\n",
       " 451: 400272016122,\n",
       " 452: 400272016123,\n",
       " 453: 400272017001,\n",
       " 454: 400272018011,\n",
       " 455: 400272018012,\n",
       " 456: 400272018021,\n",
       " 457: 400272018022,\n",
       " 458: 400272019021,\n",
       " 459: 400272019022,\n",
       " 460: 400272019023,\n",
       " 461: 400272019031,\n",
       " 462: 400272019032,\n",
       " 463: 400272019041,\n",
       " 464: 400272019042,\n",
       " 465: 400272019043,\n",
       " 466: 400272020021,\n",
       " 467: 400272020022,\n",
       " 468: 400272020023,\n",
       " 469: 400272020041,\n",
       " 470: 400272020042,\n",
       " 471: 400272020051,\n",
       " 472: 400272020052,\n",
       " 473: 400272020053,\n",
       " 474: 400272020054,\n",
       " 475: 400272020061,\n",
       " 476: 400272020062,\n",
       " 477: 400272020071,\n",
       " 478: 400272020072,\n",
       " 479: 400272020073,\n",
       " 480: 400272020081,\n",
       " 481: 400272020082,\n",
       " 482: 400272021021,\n",
       " 483: 400272021022,\n",
       " 484: 400272021041,\n",
       " 485: 400272021051,\n",
       " 486: 400272021052,\n",
       " 487: 400272021053,\n",
       " 488: 400272021061,\n",
       " 489: 400272021062,\n",
       " 490: 400272021063,\n",
       " 491: 400272021071,\n",
       " 492: 400272022011,\n",
       " 493: 400272022012,\n",
       " 494: 400272022031,\n",
       " 495: 400272022032,\n",
       " 496: 400272022051,\n",
       " 497: 400272022052,\n",
       " 498: 400272022061,\n",
       " 499: 400272023011,\n",
       " 500: 400272023012,\n",
       " 501: 400272023013,\n",
       " 502: 400272023014,\n",
       " 503: 400272023021,\n",
       " 504: 400272023022,\n",
       " 505: 400272023023,\n",
       " 506: 400272023024,\n",
       " 507: 400272024021,\n",
       " 508: 400272024022,\n",
       " 509: 400272024023,\n",
       " 510: 400272024024,\n",
       " 511: 400272024031,\n",
       " 512: 400272024032,\n",
       " 513: 400272024033,\n",
       " 514: 400272024034,\n",
       " 515: 400272024035,\n",
       " 516: 400272024041,\n",
       " 517: 400272024042,\n",
       " 518: 400272024043,\n",
       " 519: 400272024051,\n",
       " 520: 400272024052,\n",
       " 521: 400272024053,\n",
       " 522: 400272025001,\n",
       " 523: 400272025002,\n",
       " 524: 400272025003,\n",
       " 525: 400272025004,\n",
       " 526: 400272026001,\n",
       " 527: 400272026002,\n",
       " 528: 400272026003,\n",
       " 529: 400293881001,\n",
       " 530: 400293881002,\n",
       " 531: 400293881003,\n",
       " 532: 400293881004,\n",
       " 533: 400293882001,\n",
       " 534: 400293882002,\n",
       " 535: 400310001001,\n",
       " 536: 400310001003,\n",
       " 537: 400310001004,\n",
       " 538: 400310002002,\n",
       " 539: 400310003001,\n",
       " 540: 400310003002,\n",
       " 541: 400310003003,\n",
       " 542: 400310003004,\n",
       " 543: 400310004011,\n",
       " 544: 400310004012,\n",
       " 545: 400310004013,\n",
       " 546: 400310004014,\n",
       " 547: 400310004015,\n",
       " 548: 400310004021,\n",
       " 549: 400310004022,\n",
       " 550: 400310004023,\n",
       " 551: 400310004031,\n",
       " 552: 400310004032,\n",
       " 553: 400310005011,\n",
       " 554: 400310005012,\n",
       " 555: 400310005013,\n",
       " 556: 400310005014,\n",
       " 557: 400310005021,\n",
       " 558: 400310005022,\n",
       " 559: 400310005023,\n",
       " 560: 400310005024,\n",
       " 561: 400310006001,\n",
       " 562: 400310006002,\n",
       " 563: 400310007002,\n",
       " 564: 400310008002,\n",
       " 565: 400310009001,\n",
       " 566: 400310009002,\n",
       " 567: 400310010001,\n",
       " 568: 400310010002,\n",
       " 569: 400310011001,\n",
       " 570: 400310011002,\n",
       " 571: 400310014002,\n",
       " 572: 400310015001,\n",
       " 573: 400310015002,\n",
       " 574: 400310016001,\n",
       " 575: 400310017003,\n",
       " 576: 400310019011,\n",
       " 577: 400310019012,\n",
       " 578: 400310019021,\n",
       " 579: 400310020011,\n",
       " 580: 400310020012,\n",
       " 581: 400310020031,\n",
       " 582: 400310020041,\n",
       " 583: 400310020042,\n",
       " 584: 400310020051,\n",
       " 585: 400310020052,\n",
       " 586: 400310020053,\n",
       " 587: 400310021001,\n",
       " 588: 400310021002,\n",
       " 589: 400310021003,\n",
       " 590: 400310021004,\n",
       " 591: 400310022001,\n",
       " 592: 400310022002,\n",
       " 593: 400310022003,\n",
       " 594: 400310023011,\n",
       " 595: 400310023012,\n",
       " 596: 400310023013,\n",
       " 597: 400310023014,\n",
       " 598: 400310023021,\n",
       " 599: 400310023022,\n",
       " 600: 400310023023,\n",
       " 601: 400310024032,\n",
       " 602: 400310024041,\n",
       " 603: 400310024042,\n",
       " 604: 400310025002,\n",
       " 605: 400338711001,\n",
       " 606: 400338711002,\n",
       " 607: 400338711003,\n",
       " 608: 400338711004,\n",
       " 609: 400338712001,\n",
       " 610: 400338712002,\n",
       " 611: 400353732002,\n",
       " 612: 400353733002,\n",
       " 613: 400353734003,\n",
       " 614: 400353735001,\n",
       " 615: 400370201011,\n",
       " 616: 400370201031,\n",
       " 617: 400370201032,\n",
       " 618: 400370206011,\n",
       " 619: 400370206012,\n",
       " 620: 400370206021,\n",
       " 621: 400370207021,\n",
       " 622: 400370207022,\n",
       " 623: 400370207041,\n",
       " 624: 400370207051,\n",
       " 625: 400370207052,\n",
       " 626: 400370207061,\n",
       " 627: 400370207062,\n",
       " 628: 400370207071,\n",
       " 629: 400370208001,\n",
       " 630: 400370208002,\n",
       " 631: 400370209001,\n",
       " 632: 400370209002,\n",
       " 633: 400370209003,\n",
       " 634: 400370210002,\n",
       " 635: 400370210003,\n",
       " 636: 400370211011,\n",
       " 637: 400370211012,\n",
       " 638: 400370211013,\n",
       " 639: 400370211021,\n",
       " 640: 400370211022,\n",
       " 641: 400370212011,\n",
       " 642: 400370212021,\n",
       " 643: 400370212023,\n",
       " 644: 400370214001,\n",
       " 645: 400370214002,\n",
       " 646: 400370214004,\n",
       " 647: 400370215001,\n",
       " 648: 400370215002,\n",
       " 649: 400370215003,\n",
       " 650: 400399508001,\n",
       " 651: 400399508002,\n",
       " 652: 400399508003,\n",
       " 653: 400399604001,\n",
       " 654: 400399604002,\n",
       " 655: 400399604003,\n",
       " 656: 400399604004,\n",
       " 657: 400399604005,\n",
       " 658: 400399604006,\n",
       " 659: 400399606001,\n",
       " 660: 400399606002,\n",
       " 661: 400399606003,\n",
       " 662: 400399606004,\n",
       " 663: 400399606005,\n",
       " 664: 400399607001,\n",
       " 665: 400399607002,\n",
       " 666: 400399607003,\n",
       " 667: 400399607004,\n",
       " 668: 400399607005,\n",
       " 669: 400399610001,\n",
       " 670: 400399610002,\n",
       " 671: 400399610003,\n",
       " 672: 400413756012,\n",
       " 673: 400413756021,\n",
       " 674: 400413756022,\n",
       " 675: 400413757001,\n",
       " 676: 400413757002,\n",
       " 677: 400413757003,\n",
       " 678: 400413758023,\n",
       " 679: 400413759001,\n",
       " 680: 400413760002,\n",
       " 681: 400413760003,\n",
       " 682: 400413761002,\n",
       " 683: 400439591001,\n",
       " 684: 400439591002,\n",
       " 685: 400439592001,\n",
       " 686: 400439593001,\n",
       " 687: 400439593002,\n",
       " 688: 400459526001,\n",
       " 689: 400459526002,\n",
       " 690: 400459528001,\n",
       " 691: 400470001001,\n",
       " 692: 400470001002,\n",
       " 693: 400470001003,\n",
       " 694: 400470001004,\n",
       " 695: 400470001005,\n",
       " 696: 400470001006,\n",
       " 697: 400470002001,\n",
       " 698: 400470002002,\n",
       " 699: 400470006001,\n",
       " 700: 400470006002,\n",
       " 701: 400470006003,\n",
       " 702: 400470006004,\n",
       " 703: 400470007001,\n",
       " 704: 400470007002,\n",
       " 705: 400470007003,\n",
       " 706: 400470007004,\n",
       " 707: 400470007005,\n",
       " 708: 400470007006,\n",
       " 709: 400470011001,\n",
       " 710: 400470011002,\n",
       " 711: 400470011003,\n",
       " 712: 400470011004,\n",
       " 713: 400470012001,\n",
       " 714: 400470012002,\n",
       " 715: 400470012003,\n",
       " 716: 400470012004,\n",
       " 717: 400470013001,\n",
       " 718: 400470013002,\n",
       " 719: 400470013003,\n",
       " 720: 400470013004,\n",
       " 721: 400470014011,\n",
       " 722: 400470014012,\n",
       " 723: 400470014013,\n",
       " 724: 400470014021,\n",
       " 725: 400470014022,\n",
       " 726: 400470015001,\n",
       " 727: 400470015002,\n",
       " 728: 400470015003,\n",
       " 729: 400470015004,\n",
       " 730: 400470015005,\n",
       " 731: 400470015006,\n",
       " 732: 400470016011,\n",
       " 733: 400470016012,\n",
       " 734: 400470016013,\n",
       " 735: 400470016021,\n",
       " 736: 400470016022,\n",
       " 737: 400496811001,\n",
       " 738: 400496811002,\n",
       " 739: 400496811003,\n",
       " 740: 400496812001,\n",
       " 741: 400496812002,\n",
       " 742: 400496812003,\n",
       " 743: 400496813001,\n",
       " 744: 400496813002,\n",
       " 745: 400496813003,\n",
       " 746: 400496814001,\n",
       " 747: 400496814002,\n",
       " 748: 400496814003,\n",
       " 749: 400496814004,\n",
       " 750: 400496815001,\n",
       " 751: 400496815002,\n",
       " 752: 400496816001,\n",
       " 753: 400496816002,\n",
       " 754: 400496817001,\n",
       " 755: 400496817002,\n",
       " 756: 400496818001,\n",
       " 757: 400496818002,\n",
       " 758: 400496818003,\n",
       " 759: 400496818004,\n",
       " 760: 400496819001,\n",
       " 761: 400496819002,\n",
       " 762: 400496819003,\n",
       " 763: 400510001001,\n",
       " 764: 400510004001,\n",
       " 765: 400510004002,\n",
       " 766: 400510004003,\n",
       " 767: 400510004004,\n",
       " 768: 400510004005,\n",
       " 769: 400510005001,\n",
       " 770: 400510005002,\n",
       " 771: 400510005003,\n",
       " 772: 400510005004,\n",
       " 773: 400510006001,\n",
       " 774: 400510006002,\n",
       " 775: 400510006003,\n",
       " 776: 400510006004,\n",
       " 777: 400510007001,\n",
       " 778: 400510007002,\n",
       " 779: 400510007003,\n",
       " 780: 400510007004,\n",
       " 781: 400510007005,\n",
       " 782: 400510007006,\n",
       " 783: 400510008001,\n",
       " 784: 400510008002,\n",
       " 785: 400510008003,\n",
       " 786: 400510008004,\n",
       " 787: 400510009011,\n",
       " 788: 400510009012,\n",
       " 789: 400510009013,\n",
       " 790: 400510009021,\n",
       " 791: 400510009022,\n",
       " 792: 400510009023,\n",
       " 793: 400510009031,\n",
       " 794: 400510009032,\n",
       " 795: 400510009033,\n",
       " 796: 400510009034,\n",
       " 797: 400510009035,\n",
       " 798: 400510010001,\n",
       " 799: 400510010002,\n",
       " 800: 400510010003,\n",
       " 801: 400510010004,\n",
       " 802: 400539564001,\n",
       " 803: 400539565002,\n",
       " 804: 400539565003,\n",
       " 805: 400559671001,\n",
       " 806: 400559671002,\n",
       " 807: 400559672001,\n",
       " 808: 400559672002,\n",
       " 809: 400559672003,\n",
       " 810: 400559672004,\n",
       " 811: 400579678002,\n",
       " 812: 400599521001,\n",
       " 813: 400599522001,\n",
       " 814: 400612792001,\n",
       " 815: 400612793001,\n",
       " 816: 400612793002,\n",
       " 817: 400612794002,\n",
       " 818: 400634846001,\n",
       " 819: 400634846002,\n",
       " 820: 400634847001,\n",
       " 821: 400634847002,\n",
       " 822: 400634848001,\n",
       " 823: 400634848002,\n",
       " 824: 400634848003,\n",
       " 825: 400634849001,\n",
       " 826: 400634849002,\n",
       " 827: 400634849003,\n",
       " 828: 400634850001,\n",
       " 829: 400634850002,\n",
       " 830: 400634850003,\n",
       " 831: 400659681001,\n",
       " 832: 400659681002,\n",
       " 833: 400659682001,\n",
       " 834: 400659682002,\n",
       " 835: 400659683001,\n",
       " 836: 400659683002,\n",
       " 837: 400659684001,\n",
       " 838: 400659684002,\n",
       " 839: 400659684003,\n",
       " 840: 400659684004,\n",
       " 841: 400659685001,\n",
       " 842: 400659685002,\n",
       " 843: 400659685003,\n",
       " 844: 400659686001,\n",
       " 845: 400659686002,\n",
       " 846: 400659686003,\n",
       " 847: 400659686005,\n",
       " 848: 400659687002,\n",
       " 849: 400659688001,\n",
       " 850: 400659688002,\n",
       " 851: 400659688003,\n",
       " 852: 400673716001,\n",
       " 853: 400673716002,\n",
       " 854: 400673717001,\n",
       " 855: 400673718001,\n",
       " 856: 400673718003,\n",
       " 857: 400696601981,\n",
       " 858: 400696602001,\n",
       " 859: 400696602002,\n",
       " 860: 400696602003,\n",
       " 861: 400696602004,\n",
       " 862: 400696602005,\n",
       " 863: 400696603001,\n",
       " 864: 400696603002,\n",
       " 865: 400710001002,\n",
       " 866: 400710001003,\n",
       " 867: 400710001006,\n",
       " 868: 400710002011,\n",
       " 869: 400710002012,\n",
       " 870: 400710002013,\n",
       " 871: 400710002021,\n",
       " 872: 400710002022,\n",
       " 873: 400710002023,\n",
       " 874: 400710003001,\n",
       " 875: 400710003002,\n",
       " 876: 400710003003,\n",
       " 877: 400710004002,\n",
       " 878: 400710005001,\n",
       " 879: 400710005003,\n",
       " 880: 400710005004,\n",
       " 881: 400710006001,\n",
       " 882: 400710006002,\n",
       " 883: 400710011001,\n",
       " 884: 400710011002,\n",
       " 885: 400710011003,\n",
       " 886: 400710012001,\n",
       " 887: 400710012002,\n",
       " 888: 400710012004,\n",
       " 889: 400710013011,\n",
       " 890: 400710013012,\n",
       " 891: 400710013013,\n",
       " 892: 400710013014,\n",
       " 893: 400710013021,\n",
       " 894: 400710013023,\n",
       " 895: 400739581001,\n",
       " 896: 400739581002,\n",
       " 897: 400739581003,\n",
       " 898: 400739581004,\n",
       " 899: 400739582001,\n",
       " 900: 400739582002,\n",
       " 901: 400739583001,\n",
       " 902: 400739583002,\n",
       " 903: 400739583003,\n",
       " 904: 400739584001,\n",
       " 905: 400739584002,\n",
       " 906: 400759636001,\n",
       " 907: 400759637001,\n",
       " 908: 400759637002,\n",
       " 909: 400759637003,\n",
       " 910: 400759637004,\n",
       " 911: 400759642001,\n",
       " 912: 400759642002,\n",
       " 913: 400759642003,\n",
       " 914: 400770871002,\n",
       " 915: 400770872001,\n",
       " 916: 400770872003,\n",
       " 917: 400770873001,\n",
       " 918: 400790403012,\n",
       " 919: 400790403014,\n",
       " 920: 400790403021,\n",
       " 921: 400790403022,\n",
       " 922: 400790403032,\n",
       " 923: 400790403033,\n",
       " 924: 400790404011,\n",
       " 925: 400790404012,\n",
       " 926: 400790404013,\n",
       " 927: 400790405002,\n",
       " 928: 400790406021,\n",
       " 929: 400790407002,\n",
       " 930: 400819611001,\n",
       " 931: 400819611002,\n",
       " 932: 400819611003,\n",
       " 933: 400819611004,\n",
       " 934: 400819611005,\n",
       " 935: 400819612001,\n",
       " 936: 400819612002,\n",
       " 937: 400819612003,\n",
       " 938: 400819613001,\n",
       " 939: 400819613002,\n",
       " 940: 400819613003,\n",
       " 941: 400819614001,\n",
       " 942: 400819614002,\n",
       " 943: 400819614003,\n",
       " 944: 400819614004,\n",
       " 945: 400819615001,\n",
       " 946: 400819615002,\n",
       " 947: 400819615003,\n",
       " 948: 400819616001,\n",
       " 949: 400819616002,\n",
       " 950: 400819617001,\n",
       " 951: 400819617002,\n",
       " 952: 400819617003,\n",
       " 953: 400819617004,\n",
       " 954: 400836001001,\n",
       " 955: 400836001002,\n",
       " 956: 400836001003,\n",
       " 957: 400836001004,\n",
       " 958: 400836001005,\n",
       " 959: 400836002001,\n",
       " 960: 400836002002,\n",
       " 961: 400836002003,\n",
       " 962: 400836003001,\n",
       " 963: 400836003002,\n",
       " 964: 400836004001,\n",
       " 965: 400836004002,\n",
       " 966: 400836004003,\n",
       " 967: 400836004004,\n",
       " 968: 400836005001,\n",
       " 969: 400836005002,\n",
       " 970: 400836005003,\n",
       " 971: 400836005004,\n",
       " 972: 400836005005,\n",
       " 973: 400836005006,\n",
       " 974: 400836006001,\n",
       " 975: 400836006002,\n",
       " 976: 400836006003,\n",
       " 977: 400836007001,\n",
       " 978: 400836007002,\n",
       " 979: 400836007003,\n",
       " 980: 400836007004,\n",
       " 981: 400836007005,\n",
       " 982: 400836008001,\n",
       " 983: 400836008002,\n",
       " 984: 400836008003,\n",
       " 985: 400836008004,\n",
       " 986: 400850941001,\n",
       " 987: 400850941002,\n",
       " 988: 400850942001,\n",
       " 989: 400850942002,\n",
       " 990: 400850942003,\n",
       " 991: 400850943001,\n",
       " 992: 400874001011,\n",
       " 993: 400874001012,\n",
       " 994: 400874001021,\n",
       " 995: 400874001022,\n",
       " 996: 400874001023,\n",
       " 997: 400874001024,\n",
       " 998: 400874001025,\n",
       " 999: 400874002011,\n",
       " ...}"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cbg_to_12digit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "#load poi# to safegraph_place_id. this is also a dictionary data structure\n",
    "poi_to_place_id_category = visitMatrices['pois_idxs_to_ids']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{0: 'sg:5a60604513f94e0aa945cca538176c36',\n",
       " 1: 'sg:3b2d09f6aa074dbcb7acbb1ddbf96e38',\n",
       " 2: 'sg:4a64771b6ad943c8a42bf743e4a68fd3',\n",
       " 3: 'sg:28046ca08d2d4fe49403f7141bd8ab07',\n",
       " 4: 'sg:05842653b67b4cd29e55be69eb8ff132',\n",
       " 5: 'sg:182d74ecd36a4f5c950fe9126fd311aa',\n",
       " 6: 'sg:df322e54f5b14745ad3942eb93d23fa4',\n",
       " 7: 'sg:20b05b89c5b544128970044e5aefac1b',\n",
       " 8: 'sg:4645841aa29b45e094e7452bdfdaeb8f',\n",
       " 9: 'sg:a7e586e6cfcc492a9bb46f865fe14b9c',\n",
       " 10: 'sg:d183e382e3094def913ee4f195a8321b',\n",
       " 11: 'sg:7897f2a9c822459b89b0835835ad71c4',\n",
       " 12: 'sg:7089535e1eae473eb318a2adfd2f992b',\n",
       " 13: 'sg:5dc0afb410254e7b8eaf6c26ce9b8d5e',\n",
       " 14: 'sg:8317522e18a2418889af37b141c2b69a',\n",
       " 15: 'sg:97b0da15485a4f1088db64764bfa359a',\n",
       " 16: 'sg:8a6e4cdbbe1a46d18f372d9863e83ee9',\n",
       " 17: 'sg:98f212337f554d7baeaccff6cc54d00a',\n",
       " 18: 'sg:822a46b7cb7b41a99fb5b4f37b934c92',\n",
       " 19: 'sg:8dbefe176f1f4d4dba205e3204f1663a',\n",
       " 20: 'sg:adb2cf2e10384f34835472199463ff35',\n",
       " 21: 'sg:e0bfe94d094c431ea4bc2d8ffb20d733',\n",
       " 22: 'sg:42d5c4648bce482b9b06314d1c48e260',\n",
       " 23: 'sg:7cf0094c556d4e069b642a7117bdfa06',\n",
       " 24: 'sg:04645b4415c54a6a80cd3efabd3ad2b8',\n",
       " 25: 'sg:4113bb419f374559ad201890b34b1582',\n",
       " 26: 'sg:bdef60767d4b4962bd2d508479ed7a1a',\n",
       " 27: 'sg:0e8d1c26efa9482d92b544af9014ee43',\n",
       " 28: 'sg:58fa9bd6a8d748dc98e44d425b34f884',\n",
       " 29: 'sg:1d878812d2c74f34a69d9524de887694',\n",
       " 30: 'sg:6400f8b13f414ada84b5a5287ffe0f22',\n",
       " 31: 'sg:ded2b9411e8a42e4b7b531fd700aee8f',\n",
       " 32: 'sg:c5dea4ba501445cb97e48e4694fd0b4f',\n",
       " 33: 'sg:659a696e66b5411f89e64a4faad08522',\n",
       " 34: 'sg:078f90716a224fe19aa2bca1e7620657',\n",
       " 35: 'sg:fcc802b24090438ab6f1cd7e61c3ddc2',\n",
       " 36: 'sg:56e45fa8f95840168cbb913a7ca9832c',\n",
       " 37: 'sg:2493abd2de67426eab74adf72dfa40db',\n",
       " 38: 'sg:3dfb4e882bd443f087425035a9fea502',\n",
       " 39: 'sg:83139402e80b43548ae749d0e4f959c5',\n",
       " 40: 'sg:5ccb8d7080d343a59eed7d2a0082575d',\n",
       " 41: 'sg:b684e1a0cfcb49bcab196dd3f6675e78',\n",
       " 42: 'sg:2ae8ac7779c440668c6d2bc34a8a5206',\n",
       " 43: 'sg:be9c687c4e4c4e86a46704bb13b43fab',\n",
       " 44: 'sg:c6fce251b04a4068aafbb74f2dd84f6d',\n",
       " 45: 'sg:6d7fca6e0ab14498889e00b69b311c00',\n",
       " 46: 'sg:21999377c93d4d5398299dac4908ba10',\n",
       " 47: 'sg:69258bf94b1a4d1eb8cd8aac5b3bba9e',\n",
       " 48: 'sg:3f7d96ab9f7849ff8b448a3ef6a7d3c1',\n",
       " 49: 'sg:f59c97a10747451aa6e6943e038221fd',\n",
       " 50: 'sg:33d90f4463014429be253f3d1da5d748',\n",
       " 51: 'sg:ee58277764f04e1db673d5979b1b1b9e',\n",
       " 52: 'sg:4e2d3d0ed87b4fa88460042da62bbb3b',\n",
       " 53: 'sg:95b976e61b47487fa5ea132c057ee9ae',\n",
       " 54: 'sg:20067e77807e43cb9eac5e2cc7d80183',\n",
       " 55: 'sg:3a19cc5b048240758702f5c2f9c5f33b',\n",
       " 56: 'sg:2acf965f569544b9aa5508ac3cb1d63e',\n",
       " 57: 'sg:1e2d4925ec954808a2ac0f4f75e9917b',\n",
       " 58: 'sg:0927a120a8b14c28a88dd47da72f5b69',\n",
       " 59: 'sg:57b04ebb77b94468818fa2204d302753',\n",
       " 60: 'sg:4cfc67e1bb404bf4afd02c7dce9db418',\n",
       " 61: 'sg:308583ad20414125aaac955007cc915a',\n",
       " 62: 'sg:f8f789201364430b9b9d32cc7d1dddba',\n",
       " 63: 'sg:c1cb514c373141e6874adc14463a813e',\n",
       " 64: 'sg:496b52f2508748b9867548bd30bc31b9',\n",
       " 65: 'sg:5f5e586c7df24316a89f1bb8bb616ab0',\n",
       " 66: 'sg:78364053fc9048f18658ba6fd0e37935',\n",
       " 67: 'sg:34bbcabcb0e54335aaf584ea98b74bf5',\n",
       " 68: 'sg:799335e41ce242d68639d9fa95465a8f',\n",
       " 69: 'sg:4dd72efdb23f4f4cb1f33d9931d38294',\n",
       " 70: 'sg:dff5dfeddd17476b9f6dc67d06ee57a3',\n",
       " 71: 'sg:0ae434b4bbac4bac87c025d7335d5259',\n",
       " 72: 'sg:223aa6a7217142bea8c1f1dfee27b98c',\n",
       " 73: 'sg:2310373f824244a6b4b7b94f457fd04a',\n",
       " 74: 'sg:c7ad290b70d748748a8ca7139dd29b78',\n",
       " 75: 'sg:447e97cbfccf495dbed139d739d8d461',\n",
       " 76: 'sg:250760f17c714c899e3e994378e4fdd6',\n",
       " 77: 'sg:11864c4d8d4a486891921631c5da4c74',\n",
       " 78: 'sg:e25a6b5fe6df4fae8abb4e7b1fd915ca',\n",
       " 79: 'sg:ad5113de4b8646f8b7c8b9ee538e2d9a',\n",
       " 80: 'sg:417833ee980449fa963929af6beee6aa',\n",
       " 81: 'sg:6bbcbceccaf1410787c70e27a67aa5da',\n",
       " 82: 'sg:1e0edc816cb34546b7ee862464f53a9e',\n",
       " 83: 'sg:ce5b20dc07ab4fa89e68fe11d04610d7',\n",
       " 84: 'sg:3c8576b317a74f78806a324e9ddb3ff0',\n",
       " 85: 'sg:f149132b61664de4b7c3c0fdba96235a',\n",
       " 86: 'sg:052f8debee7349a0bc9f5550875b1397',\n",
       " 87: 'sg:38d64dce8a45408d8214df7c8d49dbdf',\n",
       " 88: 'sg:34b94dadc09240a7b825bc43fd026756',\n",
       " 89: 'sg:dd47c49cd4b340a683e0672a151c4c12',\n",
       " 90: 'sg:6b78fb10c1dd44f480905b03a92bd65a',\n",
       " 91: 'sg:ba537bbcf1844c5ba9c3b4ffa28a5620',\n",
       " 92: 'sg:9beb9c59e08e4be0a277ca8c8eab4335',\n",
       " 93: 'sg:7a3739bbce8c46c0a989f50936687a6d',\n",
       " 94: 'sg:65fb454af3a043169083283acbfaf561',\n",
       " 95: 'sg:0a8c5afe8bd943939a2acb1b3af88091',\n",
       " 96: 'sg:d4128189a6b44114bac7b50648342c65',\n",
       " 97: 'sg:1e8e063aebc34f59a041cb5053f8401d',\n",
       " 98: 'sg:7039ccb358974f3689eeb2d71f161e81',\n",
       " 99: 'sg:87aa213ed4bb4d88ae6a8574b5232a85',\n",
       " 100: 'sg:bd385b9cdac94b028cf83cbcee9bdeb9',\n",
       " 101: 'sg:c7a7d844f0394f0a8b8264035b72f064',\n",
       " 102: 'sg:d6f1bdc90e324da7bee6428c474d8788',\n",
       " 103: 'sg:80f1ea455aee4df8a8e8875c9cf01772',\n",
       " 104: 'sg:30a740c3982b49f9844f2259e8654c79',\n",
       " 105: 'sg:7334469e174e41ffa991b61181e771e5',\n",
       " 106: 'sg:a2d8a8dd16084e16a8cd50546a908a01',\n",
       " 107: 'sg:6b200d2ee9a145f4a6a8dbed90109239',\n",
       " 108: 'sg:d0734f2c79224ddf9fc83c171ac3c939',\n",
       " 109: 'sg:21360b424f1e4b4ea0466b267da3e890',\n",
       " 110: 'sg:694cd41b66dd4d6ab4341b75530258a0',\n",
       " 111: 'sg:35fef9a291394af4a4aca836ea21747a',\n",
       " 112: 'sg:8f22c3c77b3c45e3b6746b0ee50b0c47',\n",
       " 113: 'sg:1972143d4a354a46aa7376437d27979e',\n",
       " 114: 'sg:4d2c808f55ce4bb9835aad323a7fbf83',\n",
       " 115: 'sg:ff9a48dfd115469c8d8ee72970bc097b',\n",
       " 116: 'sg:e03cc03a1f034448944d54708d377cfa',\n",
       " 117: 'sg:765b6c4f133d4f75817e9fdbd83eaf55',\n",
       " 118: 'sg:3b5338ec3c92466988f2b6896f65757b',\n",
       " 119: 'sg:be6e89b1147b46a28f1efe0e42274617',\n",
       " 120: 'sg:b155951d3c914637afbaf3d98424eee6',\n",
       " 121: 'sg:608adca35aea453186a2a423a25c01bc',\n",
       " 122: 'sg:8d445a8177eb4114ac696b59019b91ac',\n",
       " 123: 'sg:fdf63149602746ed9fd42a7dfaca5e6c',\n",
       " 124: 'sg:ba97516fce35459ea88998ea30e8a241',\n",
       " 125: 'sg:e0361d90b6bd42e48a4becf15c75c550',\n",
       " 126: 'sg:3a5569312b3a43e3b396308136f096b8',\n",
       " 127: 'sg:c4e127d0ee73448e8eebb8e4491d0967',\n",
       " 128: 'sg:bee8c33653ab440f836c5da02f69c5df',\n",
       " 129: 'sg:5246ea1156f84a258aebd96a8085d63a',\n",
       " 130: 'sg:b8c4a9de11f243128c2f80f090549818',\n",
       " 131: 'sg:59032b2ee34e45debd201daf4c798ee9',\n",
       " 132: 'sg:933244c8031d4d7cae237f64f6749e50',\n",
       " 133: 'sg:e1594a24643345ddbf280acd8c7c122f',\n",
       " 134: 'sg:3fcef856b42243ca9cad73e13fdf78e0',\n",
       " 135: 'sg:ec22456676bc44b3bfe4f050349da6c0',\n",
       " 136: 'sg:0cc0d89192024e54b2edb2818b188edf',\n",
       " 137: 'sg:eb1f8dc5842642e4a7774031fbcba49a',\n",
       " 138: 'sg:d7ff7fbdd361445992c009d82edf901a',\n",
       " 139: 'sg:f6f82097498d472f9593c954b18f1068',\n",
       " 140: 'sg:ff98c5e2862b4064ac85f920e7eb840d',\n",
       " 141: 'sg:945df7e96dea4bd3801ccd69f65f700c',\n",
       " 142: 'sg:8ed7747d07f748eeaca04541c64562c7',\n",
       " 143: 'sg:0b2e806da53946d28fbe92fbbd492a5a',\n",
       " 144: 'sg:b6d14d1bbe58421eb6d00031218f28df',\n",
       " 145: 'sg:32a8765e1017488293ff835806c65a1d',\n",
       " 146: 'sg:6695bb6014a841b0be8898106e379831',\n",
       " 147: 'sg:77f24a815fda402a8fa99ffd4ba473c9',\n",
       " 148: 'sg:ac186465258c476880f544cd2657df80',\n",
       " 149: 'sg:56db002552444c1f8fd63bc8aa095f37',\n",
       " 150: 'sg:40a62c27c8064301b0af9c969a226879',\n",
       " 151: 'sg:eb7b4cad74c7486ebbe349f4868d9630',\n",
       " 152: 'sg:61888e65ae8d42baa484625149dd5be2',\n",
       " 153: 'sg:6d1741cdf25946db83991b4654c10adc',\n",
       " 154: 'sg:758c312316e24969ba77e2b643e390f4',\n",
       " 155: 'sg:6a448d91ae1f49e3ab1589baeacd41ec',\n",
       " 156: 'sg:46d70ef94739406ba2ba3c2a03d081b5',\n",
       " 157: 'sg:3af8a914636247f4803e4efa98c84f8f',\n",
       " 158: 'sg:567a05aa082e401386ff4f5eaee45b9c',\n",
       " 159: 'sg:535e75d6236748b9b751b565feb7099c',\n",
       " 160: 'sg:a46e1cdab92b4877b138fffec73ae40e',\n",
       " 161: 'sg:2e012d3be0f141299e3d585b5ed2cb8b',\n",
       " 162: 'sg:ff74560cf0e043ce9d0b59a16e12b8cf',\n",
       " 163: 'sg:7c5bf69fe9fa40b49e9bce74ceca66e6',\n",
       " 164: 'sg:ca6138bc00444aa8a41fb2a333d20176',\n",
       " 165: 'sg:905433f9e59a487faff95a432915a3aa',\n",
       " 166: 'sg:3187c14fc39140b5b2aa851880a81ae4',\n",
       " 167: 'sg:fe0448a4f5ef42978724007a7ecb93f8',\n",
       " 168: 'sg:55cdcded248849fab408b70ce04bd878',\n",
       " 169: 'sg:59f15459eba6436eabb2d438e08fc154',\n",
       " 170: 'sg:8f92b1ff6c0d44a2bca82399e5f8c097',\n",
       " 171: 'sg:45501d8483bd4ca6a207066e8d082b7d',\n",
       " 172: 'sg:2126b71f4b244342b4c6d9ac14e7e637',\n",
       " 173: 'sg:9b4a464842c841d0ba7a1613a5aef162',\n",
       " 174: 'sg:a9f111585d0245d38be2263925956256',\n",
       " 175: 'sg:c21daaf623bf4b6eb6f33fb8a9fe383f',\n",
       " 176: 'sg:869395e6e3564877a1e4524bef638aee',\n",
       " 177: 'sg:a6176fcf30704cb38d9fe44d952088fe',\n",
       " 178: 'sg:d3339e7ebb324a0ab66a14ad2b56a7c5',\n",
       " 179: 'sg:44cb6d7f69d74dd2b0eb35d76569d868',\n",
       " 180: 'sg:e2cfd90b64e04e5c8a9b73ffb46c73d9',\n",
       " 181: 'sg:fff7289a408d4de896a085a9843d4ea4',\n",
       " 182: 'sg:a63daf6e8e6f4f489ca38b8e4cd9ceaa',\n",
       " 183: 'sg:905b7bccfe184245b06f821aeca95351',\n",
       " 184: 'sg:d726efc782b0492c95b09bd1b46674bd',\n",
       " 185: 'sg:06e274f770104f5981c44ca63d7d5af3',\n",
       " 186: 'sg:de9b09248397435b8a9cd3a7b5a2d890',\n",
       " 187: 'sg:e497e5ccbebd4aa4ae5eaed919a12677',\n",
       " 188: 'sg:54f338b8b6b345219767ddb111bd8667',\n",
       " 189: 'sg:86591ad22fa84057a047a2b06500bfa3',\n",
       " 190: 'sg:03cedb38aece41f1a1b0f044de7c5270',\n",
       " 191: 'sg:28b307b7dd66408aab5973593b33ea93',\n",
       " 192: 'sg:71276d8424d24023924f78c7bc2e5f0d',\n",
       " 193: 'sg:8d48ab1c73024ab59a9264c2cf93f84f',\n",
       " 194: 'sg:3aeb1a2020544a72a028e7b2852a85c2',\n",
       " 195: 'sg:a4ca4d792f9d4893823aaa1f77f6440b',\n",
       " 196: 'sg:88ba335a6c9246cc95cc1b2477e96e81',\n",
       " 197: 'sg:be3a5b2e1f1545ff8a23a3e3c006d224',\n",
       " 198: 'sg:1247f0cbef044487a487878c7759e092',\n",
       " 199: 'sg:07c736de80a34efb8010c1974fdfeb66',\n",
       " 200: 'sg:ec0854e7fa024ba4a7450143fa2a22e2',\n",
       " 201: 'sg:827ba9a15435440b9b805eb701eb2f97',\n",
       " 202: 'sg:ae474bd7aff347a9ac6d104d691f15ec',\n",
       " 203: 'sg:4e8a1949c48145af9dba837196a27a5c',\n",
       " 204: 'sg:9be79c657c1942e59a0f3a23ea5ec2e7',\n",
       " 205: 'sg:ed774d8ec4e2427fad60dbc35ac8bf65',\n",
       " 206: 'sg:4e120dbd0ba64a04925b49bc6d1714f0',\n",
       " 207: 'sg:692cf9d1e7fc4c34aa35c8f6f965ac3f',\n",
       " 208: 'sg:7cb6805abb2b4cf198dfb706b69e68a6',\n",
       " 209: 'sg:9d985f24ddcd47b89208e83197393e70',\n",
       " 210: 'sg:19ec7691d39a4761acb2937aa6701428',\n",
       " 211: 'sg:5e5f88ea687d46e0926506e6cb061aab',\n",
       " 212: 'sg:f0e4b3779a92458d8cb6efe0620c9eab',\n",
       " 213: 'sg:341abda096114dc4956fa9e0bd796aac',\n",
       " 214: 'sg:bc280a08a4e046e0b37da0abbde869df',\n",
       " 215: 'sg:8a36654e83024215a43c303a9cc2b49c',\n",
       " 216: 'sg:fd1020f7c6134bf18509866d99c644d9',\n",
       " 217: 'sg:d019454274454d1da487a88e70ed946d',\n",
       " 218: 'sg:8bd70795a50447108ae9f4775be5987d',\n",
       " 219: 'sg:51bf363f7f624c2a87c4eda6f709d1d0',\n",
       " 220: 'sg:6f3351401a854cc0a67a1becd8ac9ed9',\n",
       " 221: 'sg:0908609319534d04b68df4f50f3d176c',\n",
       " 222: 'sg:64e5592fea3b4dd08476b804b8ac3f78',\n",
       " 223: 'sg:131dac170754433087ca48b7900bd1e7',\n",
       " 224: 'sg:bf9beeac469e4803b2ffd39f608b137d',\n",
       " 225: 'sg:67316ebbfc6e41d5b3fe1ef96168c0be',\n",
       " 226: 'sg:07fd05a5ad454e15b787e21868b8345d',\n",
       " 227: 'sg:13825e5101104bbfae009514d27c0f4a',\n",
       " 228: 'sg:e86b2e2175834132ab1fd392e338a9e2',\n",
       " 229: 'sg:1eb869f242f341128c2c068c72d66d49',\n",
       " 230: 'sg:b57fcf003d564113b6b4c71ba5914f3a',\n",
       " 231: 'sg:90aa65c83826447c9b8d7978a9cc1827',\n",
       " 232: 'sg:9e215659a951458f895f80e80878bf66',\n",
       " 233: 'sg:7f8ec179a1954b79a74a8bdb4ff92bcc',\n",
       " 234: 'sg:2555b2fa9995465b8308d83cff3dca1b',\n",
       " 235: 'sg:839983d7940c467290fd7b40813a7935',\n",
       " 236: 'sg:f5a523df761548c38f8f49c0712c7178',\n",
       " 237: 'sg:ad0c804814cf42feb1fa210fa54de5a2',\n",
       " 238: 'sg:94a244ef6a7847e1bc0e5a38fce75065',\n",
       " 239: 'sg:f913760c52dc42a79241efe72fd66445',\n",
       " 240: 'sg:ca79f96e3d4a460ba0253a269473bb06',\n",
       " 241: 'sg:b7b40841d9184bdea2c5b4a821adc05a',\n",
       " 242: 'sg:9e29075913134d85a851db63f42c77a5',\n",
       " 243: 'sg:754c4b511582444bb76db0f6f9e3a05e',\n",
       " 244: 'sg:f8366e4a89f54666b07cd094a6d756b8',\n",
       " 245: 'sg:16f561696bcb4f398a96c1a92a51b740',\n",
       " 246: 'sg:8ac918bf83514211b8bc58fa52924948',\n",
       " 247: 'sg:1413ff2fa60742dba84262c89f3dbf04',\n",
       " 248: 'sg:6aefff9458ae4a1a82b9383c7251129f',\n",
       " 249: 'sg:00d7bff6bfc34bf29f164178fdcbb76d',\n",
       " 250: 'sg:cd14ff6d864747729422644162b732c6',\n",
       " 251: 'sg:c3f11bf542584bf2a68ce1fd6a3a8d40',\n",
       " 252: 'sg:6511aca1bfe64e3f8e416a0065d52d4d',\n",
       " 253: 'sg:e30bcb1bc682407ab394e59de6c7f40c',\n",
       " 254: 'sg:9871a3ccbf014c1790d05f1c703d7c23',\n",
       " 255: 'sg:01493b5aa1ea4757acce4500ccd6298f',\n",
       " 256: 'sg:2c59742f87af4ac0b804c1f5563ebe9b',\n",
       " 257: 'sg:424c3b729bbe4a1193ef9a68fee5a5ce',\n",
       " 258: 'sg:bc45755ba9804164b73ce3bb36380ccc',\n",
       " 259: 'sg:ef3dc49bd7004e888c1e23264d066829',\n",
       " 260: 'sg:ef077c0a2fd24577ae24cc8bcc98de54',\n",
       " 261: 'sg:f693e6bf627f492094b31c2030492393',\n",
       " 262: 'sg:bbe4077d72324392a063bf9ebc7d3548',\n",
       " 263: 'sg:100f485299b54b6fbea66d373007910d',\n",
       " 264: 'sg:0580639bd39341aaa40fc2b6386fba48',\n",
       " 265: 'sg:dba2b30c450c43e1a40fa7d7d985d3ab',\n",
       " 266: 'sg:8ba0378ecb614a8cab50bcca9bc3a745',\n",
       " 267: 'sg:d104ffd002b84e0eb6b335653f9234ba',\n",
       " 268: 'sg:e408afd49fa24698a33ead0231775fb8',\n",
       " 269: 'sg:93f17cdfb41b488ca8567ea0a6604dfe',\n",
       " 270: 'sg:e15cb800b5ab4cc0a7e7baa6f3606f0a',\n",
       " 271: 'sg:5b1ba95d48944262bc7171a60220fa4d',\n",
       " 272: 'sg:2b81e9b0703a4ce89d36d773cdbcdc99',\n",
       " 273: 'sg:3b60a7855fc74809bc31a2e1ca014c69',\n",
       " 274: 'sg:853221e58fac4e189e0a5a083fd9a346',\n",
       " 275: 'sg:2a67d05c7d744973b9e8469b7315d0c2',\n",
       " 276: 'sg:57dfec7608c54f7a8064bb3adb35963b',\n",
       " 277: 'sg:8a75fa2f57f9454c9d5d0c9ceb728011',\n",
       " 278: 'sg:ab826c6673ef4ff780f1f69e42050465',\n",
       " 279: 'sg:370b43d570694d60ba4d161a26b67cf8',\n",
       " 280: 'sg:ba0a5bb2524f4068be10dbac1e6c9039',\n",
       " 281: 'sg:baff522d11404741a037b6fec44eba60',\n",
       " 282: 'sg:61337a2742f547099907d42395867fe1',\n",
       " 283: 'sg:268054d7022f4fa1b1398a92407e9652',\n",
       " 284: 'sg:030fc0c878d94d65b94969ae34e7229b',\n",
       " 285: 'sg:b8cdb7601bae4152b98eb1bb64379785',\n",
       " 286: 'sg:331051e8650240839980c3d098347849',\n",
       " 287: 'sg:855de9a1c11b4e09810a1b386ec8e1a2',\n",
       " 288: 'sg:0e1fbca8a37042e6aff8f369a10f711b',\n",
       " 289: 'sg:fde5c46fbe9c4ef0a1c8c4cf102ed7f7',\n",
       " 290: 'sg:5a4c7e8629814e8982da2bb7239a56a8',\n",
       " 291: 'sg:85a4e4fb063446c4808e7fbdcd3df411',\n",
       " 292: 'sg:ccdacd748c9940159355b68d2f68878b',\n",
       " 293: 'sg:aeb7e3e1b705414dab001156fd0b9983',\n",
       " 294: 'sg:edb5cb426c2a4f4d8b6296088168306b',\n",
       " 295: 'sg:2f678bb60ab5440aa66fa42ba4d89352',\n",
       " 296: 'sg:c2276a59d8314300a9a5c66390535609',\n",
       " 297: 'sg:6e396aa6dc3a4d339dd599323b155dc0',\n",
       " 298: 'sg:5380bb99821e4dfab82801dcfd6284dc',\n",
       " 299: 'sg:e10cf1e88d4b4d8b82f8662e0632d845',\n",
       " 300: 'sg:913a94f1240142d68db993f45d60c740',\n",
       " 301: 'sg:4b643271663e4c60bd8915578aa9ea9e',\n",
       " 302: 'sg:266023c8f1734c0698b8552ecd5be68f',\n",
       " 303: 'sg:52b6e09d4b3845cbb3b467266c94f491',\n",
       " 304: 'sg:77d3c8a6cc1c4b28978930549d6710ce',\n",
       " 305: 'sg:06bead174bb24f9ebfa3f81779f15b47',\n",
       " 306: 'sg:cd31ba16c0244a07879301cf685f2329',\n",
       " 307: 'sg:f8e8727567504d39aaba076801c04da1',\n",
       " 308: 'sg:7c5f24283e5044bbb10b017c437212e1',\n",
       " 309: 'sg:27b2bea1e1d9419cb92885db85b49b98',\n",
       " 310: 'sg:5ec34aa72140432aab6aab8f938433ee',\n",
       " 311: 'sg:b5e8fa82b56a4881aebc3c6d64da427a',\n",
       " 312: 'sg:3a847850c7e24d709a361e4af1812238',\n",
       " 313: 'sg:1f13f9d32ba74ee1ae6715983d86952f',\n",
       " 314: 'sg:9f8456bc8e8f4a00823dba4e697cff9c',\n",
       " 315: 'sg:04d2d44e5145432998d7a1d41b5a9bcd',\n",
       " 316: 'sg:45e822a7a2004750aa5741c8feaa61e4',\n",
       " 317: 'sg:4ceca07b142f41149c1d8e5bb70c626c',\n",
       " 318: 'sg:bb7392bf2bd449c9952456181573f208',\n",
       " 319: 'sg:6dd8c77ae03849f2aa9e6bcb0470d7a8',\n",
       " 320: 'sg:71aa18ecd3884d3680cd7ef3dc2498d6',\n",
       " 321: 'sg:6ea4b4a6a8264512b63ecb01709e3ffd',\n",
       " 322: 'sg:df71b5f445f04c0aa88c01ae3ba87fc1',\n",
       " 323: 'sg:7be3f6e6e3864282953b1c7c451098e7',\n",
       " 324: 'sg:279c7b0f8c6f40d393a00879cf8ea672',\n",
       " 325: 'sg:0df0c46506f243bbbf9e73e801bcec15',\n",
       " 326: 'sg:c00f071a90e547a69b21d07798f1d53f',\n",
       " 327: 'sg:41c12fa22c764960afd7cf34c3350045',\n",
       " 328: 'sg:cdf6154de2c84a62b3ec1aaf9080e7c0',\n",
       " 329: 'sg:4c0b8fab10b544bfb1d96cd213730158',\n",
       " 330: 'sg:d71accfc9236454a94d44baeea15edf4',\n",
       " 331: 'sg:e07d24e192004beba34766822a1eed0c',\n",
       " 332: 'sg:7c1e2860c9f34812b19bda2011672390',\n",
       " 333: 'sg:45775e50866b4e90a3e633608788b735',\n",
       " 334: 'sg:9f66142f81f044c5bc2a391679bd0409',\n",
       " 335: 'sg:0bf03af34ef84f849fa62d638401b830',\n",
       " 336: 'sg:ffb8c7e5bb974c4caccbc3caea0cae4c',\n",
       " 337: 'sg:b7966e8dca7f46ab8da7838f5250757a',\n",
       " 338: 'sg:20191dd81df54340b73ab9765b88c0e0',\n",
       " 339: 'sg:0e7ff422a3824090a9623efb324f8d59',\n",
       " 340: 'sg:cdb8a087857849258ef71419a2967415',\n",
       " 341: 'sg:c40b767c29f9414bb4c9faf92aaf8831',\n",
       " 342: 'sg:2fca167f92f9473986112599119a154b',\n",
       " 343: 'sg:ddf2ea1999854ecc99b1af3439d1279f',\n",
       " 344: 'sg:9dc7b6f690a047579739939db7dc3520',\n",
       " 345: 'sg:6a355e8dce624cd38b1b12f81e376697',\n",
       " 346: 'sg:0d1f12651ec84ce68de211a05c0eb169',\n",
       " 347: 'sg:bb02a08d242c4b7f8817c2c7d64b5330',\n",
       " 348: 'sg:e34299419c314f50ba4079faf0137727',\n",
       " 349: 'sg:3c769e7c8ae946e3a91ff5fc300390bd',\n",
       " 350: 'sg:47e624623675485ab90f6ededea833b0',\n",
       " 351: 'sg:df6e0121d4ac48c2b1b06ae81ad840bc',\n",
       " 352: 'sg:8dab0ab0764c444cbae5b1a22041c7ad',\n",
       " 353: 'sg:5ad31223673b495d8e0e5bf1e4655a84',\n",
       " 354: 'sg:6a80981f7e55461d98daea65913d606d',\n",
       " 355: 'sg:36a2ad3eb0b643afa258a43c2bf3a2d0',\n",
       " 356: 'sg:c6da6e28191d4c22a885715b3ce058e7',\n",
       " 357: 'sg:051b40ce6d1745d3b06b31ed95a5d274',\n",
       " 358: 'sg:b161c97c64eb4570b43812d56100efa8',\n",
       " 359: 'sg:6b25e55ed80e411ba9213a90115d5d78',\n",
       " 360: 'sg:3c72f8a73ec947a29031d6252714e105',\n",
       " 361: 'sg:94ab60ea180a4f549019cc595f6dd486',\n",
       " 362: 'sg:1519d38b5fbe47dc8ef1b9908d3254ff',\n",
       " 363: 'sg:8b377e85d32b47ac94c1be33e9dcf69a',\n",
       " 364: 'sg:4908a8b83ef94db5ba0b7967f721fe0f',\n",
       " 365: 'sg:a07f7b6d443945f08ae1dc09aa1a9bec',\n",
       " 366: 'sg:b0f587ac25994e0d9c2d53d105beeeb3',\n",
       " 367: 'sg:41a71e84c9b04361b7dc3d0dd7b16729',\n",
       " 368: 'sg:cfd4aec3c3364a25aece1dbb6aa14a05',\n",
       " 369: 'sg:acde5e27787d433ba71b14f8fcdd5812',\n",
       " 370: 'sg:854411e63d584a8ebf7f5fabd3884aef',\n",
       " 371: 'sg:c89d0a80ccc44749856d147040d5fcaf',\n",
       " 372: 'sg:e6cbd54113d44feca5f509f82b366088',\n",
       " 373: 'sg:899dca80148944a8af03bf2672bb3a59',\n",
       " 374: 'sg:7b1e80632aee4c238af2bb627c23a657',\n",
       " 375: 'sg:f87b8bf1eb33430f8df03c0e1cfa61aa',\n",
       " 376: 'sg:44699661405e488a8ab16a0469aff334',\n",
       " 377: 'sg:1a6c4faea07349bdab9234152b5dbe55',\n",
       " 378: 'sg:07fafb06ebaa48ef9cf02bd19b4ffb11',\n",
       " 379: 'sg:8474b8afcfa6413f839a5bc962f4d7d1',\n",
       " 380: 'sg:c4d5ad37b9b340c495ad26a15964c0f3',\n",
       " 381: 'sg:2c4a9b1caaa94e74b59a7bb680c0443f',\n",
       " 382: 'sg:ed63bfc8ced14c4f9c375a0888c10bcf',\n",
       " 383: 'sg:4210ed7d407d4ce4bb57ffb65913dc34',\n",
       " 384: 'sg:33f5a5df96cf496695cd864a9fbad90f',\n",
       " 385: 'sg:9de7d65facce4527b70fa6b1fe7a6e4f',\n",
       " 386: 'sg:6703da5956434c8dbd4870cca42e0adf',\n",
       " 387: 'sg:2124f56500a24d5f94ac415e684f4e08',\n",
       " 388: 'sg:a420737340be40ab917e1fafe0848efc',\n",
       " 389: 'sg:362526a54f3d4d89a0d4f1b72a7ac4ff',\n",
       " 390: 'sg:070eedb58eca4228891e4fc5f8cb17d5',\n",
       " 391: 'sg:f28f412992bb4dfcb4b751d9e975098a',\n",
       " 392: 'sg:273c65813b954577b2674472d00678c6',\n",
       " 393: 'sg:c8f021b213204d03b141d27e9b9e283d',\n",
       " 394: 'sg:304ef2d490f747a5956baf74352db8b8',\n",
       " 395: 'sg:3beb7cdd46554cfa98924d9556e177c8',\n",
       " 396: 'sg:178e0a9fcf2e49918a2f31994ac19afa',\n",
       " 397: 'sg:232a7154d9dd478fb1ef661fe32100dd',\n",
       " 398: 'sg:d2c57cf62da74d8190ed7619144f7e3b',\n",
       " 399: 'sg:92414b18ee4b4ae78300922b7c471935',\n",
       " 400: 'sg:93f8aa7f2aea4c8ca7bd60ab0c091ef5',\n",
       " 401: 'sg:80a4a5402b9e456ca3c04eb15aebee63',\n",
       " 402: 'sg:6eaf431027bb4a538682928c0d25142e',\n",
       " 403: 'sg:70265984827446d2ae794f4c21edb8ba',\n",
       " 404: 'sg:bde4ea03f6d3435892de0ce16ec95140',\n",
       " 405: 'sg:9be7ab863d2d4e74ae0a5971fe0376fd',\n",
       " 406: 'sg:504aaaff56e04880a856f7ff834b4a05',\n",
       " 407: 'sg:b8e4338b27c246dd891991e40f91a4e6',\n",
       " 408: 'sg:a567e4b4c38e4196a69276673975293c',\n",
       " 409: 'sg:44146e20f5944872a369a7165e7f80e8',\n",
       " 410: 'sg:d3c792fed19948fb8545fcca08723ad8',\n",
       " 411: 'sg:a3be7325a5c94f1485c217d1a272b8dc',\n",
       " 412: 'sg:28b0bdcc79694b059385d9e19f3fb837',\n",
       " 413: 'sg:c656bced952146598432fc897b04ef67',\n",
       " 414: 'sg:3826451780024769925503de2ef2d000',\n",
       " 415: 'sg:dff0bede39e449658f1934b18b25fee1',\n",
       " 416: 'sg:e3c87c2b3edc4871aba5d38b396674ba',\n",
       " 417: 'sg:39efc43aba3b487cb7101505c63e3933',\n",
       " 418: 'sg:4f5dce9635914b48b243421d72c112f0',\n",
       " 419: 'sg:b87376b1f01141549b3ea33c70b396eb',\n",
       " 420: 'sg:7dc547a8114841c9838e9f401bf960b8',\n",
       " 421: 'sg:8a2dea3603dc4875a461e7dcd37edc56',\n",
       " 422: 'sg:246938d3df4b4c7b8bd86f534893e61e',\n",
       " 423: 'sg:b35e336651b94dada9f45ae7c633ea65',\n",
       " 424: 'sg:3cd3d7956dbd403b9f72aec72e882689',\n",
       " 425: 'sg:6c698d0e0db7474e88a52d42f32a9da8',\n",
       " 426: 'sg:f9bf6d7003dc430d86a46944c8b67859',\n",
       " 427: 'sg:11286a437bc6417b8d631609dd5f23b5',\n",
       " 428: 'sg:b692ac38d39b48d5add9e0fb015e8e5f',\n",
       " 429: 'sg:10046fe0f4ff4d6c97e28d49044fbb00',\n",
       " 430: 'sg:e70f8795201b43d58ae274babda3aec4',\n",
       " 431: 'sg:917adce1c38d4377b125ea2a740552d4',\n",
       " 432: 'sg:0ea1cc823a194b2bbb3283a0c428a0f7',\n",
       " 433: 'sg:b4dd2ff39b1245f39f153940d8aaadba',\n",
       " 434: 'sg:a1edebc1ec7c47ec89f947c27379ef82',\n",
       " 435: 'sg:02f237fc58e148a8a21f74acd0b61783',\n",
       " 436: 'sg:121a927999374838a3c991d3310b0877',\n",
       " 437: 'sg:71fe6818ba8144c3906c8a305117ffee',\n",
       " 438: 'sg:3e5bb82182414ad7b8e8958ca172c9f9',\n",
       " 439: 'sg:fa27591f7ad34c1bb3b16a58206602dc',\n",
       " 440: 'sg:ba0b98abbdb54fb39ad2cb40e0af6f40',\n",
       " 441: 'sg:5692a69c9f78400aaaa52a53e34e960b',\n",
       " 442: 'sg:bd54964f024a4d3da700c5d7686be769',\n",
       " 443: 'sg:a0ad72537474419e99d7233551d78da9',\n",
       " 444: 'sg:0fe3558186c149d3aa3820f5149a2f8d',\n",
       " 445: 'sg:1a3120122fea485480e73aac34155520',\n",
       " 446: 'sg:315effe790e249a09e77a1adec278322',\n",
       " 447: 'sg:ea1588bbd58b496893bbe90c04e7c3e2',\n",
       " 448: 'sg:5282cdc8eed74366b2b369309ff86a31',\n",
       " 449: 'sg:85e62804b84c4d45adb739f643e61462',\n",
       " 450: 'sg:ae2b5a1327ea4ccb95a606a35f033a42',\n",
       " 451: 'sg:63fff408f1c243c3b970224645e07fc4',\n",
       " 452: 'sg:221bd67cbac747468b44feb903ae1787',\n",
       " 453: 'sg:d91eab94c239446e93937bef7c4188db',\n",
       " 454: 'sg:04e6f693e8824a4880b8a4121cae54da',\n",
       " 455: 'sg:96018f33668f43778adfa87e10a4511f',\n",
       " 456: 'sg:cbd922e8acc94820a888819a66cc898c',\n",
       " 457: 'sg:bf9f2b91d93d490da51c3d688af74deb',\n",
       " 458: 'sg:7b0ffe9347bf4726a67cfc2804bd6344',\n",
       " 459: 'sg:9b68a769fe2d40718c704e7391129487',\n",
       " 460: 'sg:967a55ad179f4674973920a98ef2f46c',\n",
       " 461: 'sg:dbfcb2a0f12a4da3b7a9f63ed90af77e',\n",
       " 462: 'sg:568b8008f0a447968003a97df7818321',\n",
       " 463: 'sg:66d42b6c0bf24d5ca2e47d2e291ab061',\n",
       " 464: 'sg:192bc1da8c5d4cb9928f6d560a221a17',\n",
       " 465: 'sg:b6b05fa7369445bdb7414071cbe00d80',\n",
       " 466: 'sg:1ab44248c06542c592b6db5fcafd70bc',\n",
       " 467: 'sg:0b9a8cb1c8d74250bcf93287fc7ed865',\n",
       " 468: 'sg:c050931f81194c00924733e131827f46',\n",
       " 469: 'sg:84ff4728d00242c4be4c8d0b8b0f75c2',\n",
       " 470: 'sg:0b9d0ab15c6048ea912ffba4bf1cbddd',\n",
       " 471: 'sg:3cea8f748bec4b139ab6a88fa2419219',\n",
       " 472: 'sg:90c7caabd2894499b46da36696df4e59',\n",
       " 473: 'sg:050520f025974fb0b7136ba6fdaaef5e',\n",
       " 474: 'sg:42e339f490f24393a500e7c17181cb81',\n",
       " 475: 'sg:51f2764e1f754828b2a91fb4319a5b6c',\n",
       " 476: 'sg:47217972899340688be69929eaa6d6a1',\n",
       " 477: 'sg:5727cd85aa37495282b9c7eca22ad903',\n",
       " 478: 'sg:072a71352d6044ec90539b928e89a5e3',\n",
       " 479: 'sg:177fda4266ff41e28f964e574726a5d1',\n",
       " 480: 'sg:79349562d97f46e4a92a8e8ac93026eb',\n",
       " 481: 'sg:b2f6de18daa848c3a43fb5aa418a2c73',\n",
       " 482: 'sg:9bdb505ea493428cae8833f389117a40',\n",
       " 483: 'sg:47ff5838598c49dc9feb320f2ad48156',\n",
       " 484: 'sg:237f5fe352da4d0fbe9691ad8c47f824',\n",
       " 485: 'sg:d06a264a28b1479b9f246816f5aee71d',\n",
       " 486: 'sg:e189141465c2480f943085bf3688aee5',\n",
       " 487: 'sg:ec40ae80ba2f4bb089580c3b9467adce',\n",
       " 488: 'sg:bc307a0c1dcb4f68952cb2ee816c31dd',\n",
       " 489: 'sg:01e3377dc21341598aba23125067755e',\n",
       " 490: 'sg:01f86e101b4a4e60963e5b6890e4d669',\n",
       " 491: 'sg:21f644302bc34742a4222269f627de92',\n",
       " 492: 'sg:58160b2227a04542ad017baea914f345',\n",
       " 493: 'sg:bf42a59cb8d14a6ca8e1b4735d45df9a',\n",
       " 494: 'sg:ca88537f96f642b5b4f631e9406d02f5',\n",
       " 495: 'sg:555f138588a84baa900f097d9d3b6e8a',\n",
       " 496: 'sg:9f6b84bb91dc4b848db467b6a895f10c',\n",
       " 497: 'sg:80292df47a1b41cda9f0db72e2e97aac',\n",
       " 498: 'sg:36cca809d5f4455ebed50cfb3b92b5a2',\n",
       " 499: 'sg:7f4cef4e69c94d308aef3f057442a5e3',\n",
       " 500: 'sg:8fffa92b89624607a4a8fc2c4b3499b4',\n",
       " 501: 'sg:d04ef5f383f542eeb829817d7a52b9b7',\n",
       " 502: 'sg:942a40c1f13e4e97b26b5fe53f8b3ef1',\n",
       " 503: 'sg:40f3ec39d6094470b48a482f6a5f8705',\n",
       " 504: 'sg:d5c3782dd67d4baf8ea4d52763409065',\n",
       " 505: 'sg:d839d37dab154e4d94b12ce679ff0a64',\n",
       " 506: 'sg:fe3164f1e9904e57bbad05200cb029f8',\n",
       " 507: 'sg:15f4d838973a4cf9b03f14fad35a5f48',\n",
       " 508: 'sg:019a25ad26484b09a7bd2195c68f4423',\n",
       " 509: 'sg:9ef49820f0bd44888f85d19b71569d30',\n",
       " 510: 'sg:a616be756cef44859754736dfe691c10',\n",
       " 511: 'sg:beabb1ef65f64cba930317acd73c5b78',\n",
       " 512: 'sg:98c26a046f8242d5a4ebfeb418b27b8b',\n",
       " 513: 'sg:689e32c06b0a4250b2fdec3577cad253',\n",
       " 514: 'sg:058a70423412441bbd9aa817959b0c0e',\n",
       " 515: 'sg:a23f443d4d6949059e0bf66ac447cb22',\n",
       " 516: 'sg:cb5d49d4d9e8494cad760bc6ae81d14c',\n",
       " 517: 'sg:c1a525ddc5824370bcf6819e0e3d2442',\n",
       " 518: 'sg:8d50f3978a154d43b403d210eaf28dc3',\n",
       " 519: 'sg:d575ced270004c36aa4ff2bd4fd67555',\n",
       " 520: 'sg:4bb4cdc3cc1c4a6f8df5e99ef2d17f45',\n",
       " 521: 'sg:e9c6753fe02a4128904e312c20d40a2b',\n",
       " 522: 'sg:e4973be2c67e433c9f98612702aabce6',\n",
       " 523: 'sg:e2f05542b6c6436da6bdca9eb6eeff20',\n",
       " 524: 'sg:2b1b00ad50d444ba80f0541a312829c9',\n",
       " 525: 'sg:2c5a6ca574bb4fdabf021448ce164134',\n",
       " 526: 'sg:162337481f2e4ecd809717b7951a38e1',\n",
       " 527: 'sg:bc637bbe1b3248beb8e301e9ba745943',\n",
       " 528: 'sg:4bba481d2a004a008d6aaf36441b235e',\n",
       " 529: 'sg:a877b58f66964fb3ad573ab1aaf148a8',\n",
       " 530: 'sg:ca39de435b824eae8f553440925156ab',\n",
       " 531: 'sg:a374becdaaa34ff994a28044017efc3b',\n",
       " 532: 'sg:27f3cba1f33a4a1690a2fea7d881960d',\n",
       " 533: 'sg:dd3c1fd9cae24c398268cbc63864b713',\n",
       " 534: 'sg:258197d8936d45ab85f683f92cd773e4',\n",
       " 535: 'sg:57aec43b4d1541a2b1fe0f6907881cf9',\n",
       " 536: 'sg:6c62c032b7194d2d9c4cde1fd6e81e93',\n",
       " 537: 'sg:1b953a7658924e009c518cb53690a526',\n",
       " 538: 'sg:ed31324dfffc41f8a95935c591780c49',\n",
       " 539: 'sg:916301a058414214be3a24b129cc0fa9',\n",
       " 540: 'sg:944d124e71ec4b82adae531bf770ddc6',\n",
       " 541: 'sg:90902dc511d24b89be35374c68983399',\n",
       " 542: 'sg:cec58f46eded43cbb86cccb5a237288b',\n",
       " 543: 'sg:cead0d9175ae4881a177a0350a752dd7',\n",
       " 544: 'sg:a469d3404a3b4498a1eea1c6b57bc195',\n",
       " 545: 'sg:bdb74fb5477f46f1ab32591d7f993354',\n",
       " 546: 'sg:c874975edd624f86a6eee50698369236',\n",
       " 547: 'sg:ee9acff1bd5d4139805a5b1e34826f38',\n",
       " 548: 'sg:01706db6899048ed9422ddab4c694692',\n",
       " 549: 'sg:a7e3b57c8be047d4908f813c462b0916',\n",
       " 550: 'sg:6e33914b12e14bf58ecfe435b7a86eeb',\n",
       " 551: 'sg:3cbff38e7a1a4ab69a41979473798b16',\n",
       " 552: 'sg:d2694f25a4904616a15274899133b23b',\n",
       " 553: 'sg:7646ed4e9a1745c7bc8d6668c55b0fa8',\n",
       " 554: 'sg:13e81581171a48dab498864465bd9e75',\n",
       " 555: 'sg:0b8153e41cbc402c98053677e4a0ae1c',\n",
       " 556: 'sg:e15c1672e79c44a7a570af2dbefb2045',\n",
       " 557: 'sg:afddc820a62744c6a80b8282aae09046',\n",
       " 558: 'sg:1ee63d5167324272968544c30c29e5be',\n",
       " 559: 'sg:3b0016af30d24e3aa8bf1e4b15669fa3',\n",
       " 560: 'sg:c905404083ed4f448c2ec627664cd396',\n",
       " 561: 'sg:aa2d5259995343a2b94e9cceca426fdd',\n",
       " 562: 'sg:f71d8b16c33d4d1daec07db4a94563df',\n",
       " 563: 'sg:f2019ed3bfbc4ddcb14ddd93d77816c4',\n",
       " 564: 'sg:bcab4bfa35cd4848ab97fa38184cd0ff',\n",
       " 565: 'sg:33768485245743e0a162cbe06c80e839',\n",
       " 566: 'sg:ef6aff885fe5465c809bead9e932bd3c',\n",
       " 567: 'sg:ad3b4c993bf940dcb1456e66f0af6b26',\n",
       " 568: 'sg:48ed478802494a0b9de89d3721ea18f4',\n",
       " 569: 'sg:3960073860e54342a718f04c47e9e49e',\n",
       " 570: 'sg:46ea784c5e6249549b961db3fd6f905a',\n",
       " 571: 'sg:85762e5938034247a67eb829b26ec998',\n",
       " 572: 'sg:19e1a63efb144ba8886ff5d1acd41b94',\n",
       " 573: 'sg:33520c2b5307404889086fca03d7fb86',\n",
       " 574: 'sg:8c8b6548d3c944b48758b630a7d1f6bd',\n",
       " 575: 'sg:c6280c77eaea479db35daada88208762',\n",
       " 576: 'sg:c24b87c05eb74a3dbc6bacbbc022935a',\n",
       " 577: 'sg:c31b6cec7d0f4543bc88efeae6f3d361',\n",
       " 578: 'sg:74f30bd552dd46a7b50b8ad45041abdd',\n",
       " 579: 'sg:780577fa1dc04aeb87e2f262ee18e83f',\n",
       " 580: 'sg:d40bc69f4e3545d9aea24863ec04b4c9',\n",
       " 581: 'sg:55022d4560d64f22b211293c1993404e',\n",
       " 582: 'sg:c609bce890cb492eb37ace4d72ecb852',\n",
       " 583: 'sg:14a11716ab9846ecb38a0045d65afdc8',\n",
       " 584: 'sg:d0e1cf0553b0495b8ad574530f414e2e',\n",
       " 585: 'sg:a9275931fab94a5fafc1fd4fb125db31',\n",
       " 586: 'sg:64c4b5a90b0345d583074454217c0cae',\n",
       " 587: 'sg:1222680d32cc4f4ba3385be5a5d47b15',\n",
       " 588: 'sg:98be3f4e06a342c092f92d119afcbd21',\n",
       " 589: 'sg:50cae55bafee40cd952a5dea54d4af0b',\n",
       " 590: 'sg:a76ae09e504b46eeb51d650fdcc3bb3b',\n",
       " 591: 'sg:a41f3855cdef454fa026bf3dfde8dd96',\n",
       " 592: 'sg:364d7558b28446adaae04b5951525e93',\n",
       " 593: 'sg:f9ea8f1c8b5c477295b75200be27c35b',\n",
       " 594: 'sg:082e6ca6819d4e9da06257e57813c7d2',\n",
       " 595: 'sg:0a27666d98714926a0077fdaa53bb2ed',\n",
       " 596: 'sg:1507af4f574042c3b7810a7e1cc2a980',\n",
       " 597: 'sg:d581f93654f84d5bbaa39d81e708628b',\n",
       " 598: 'sg:f02fb1ac54344d22b0ec41df36899489',\n",
       " 599: 'sg:673a2adc089a45ad9941c9002ce57e59',\n",
       " 600: 'sg:028035c2f1da42e3bd5c739cda989383',\n",
       " 601: 'sg:8701c19b699c4d3090a6ba959c572455',\n",
       " 602: 'sg:2b02af4536df480ab9916cc967a43f53',\n",
       " 603: 'sg:76b9299961334f84a27c65bcb89f2701',\n",
       " 604: 'sg:d3acf37ab9bf4b89845ee91b686022a8',\n",
       " 605: 'sg:db0dc3ac13dc499ca2770ee7075fa9e1',\n",
       " 606: 'sg:a38ab9ac1920471f8b9a2effdcc3953d',\n",
       " 607: 'sg:ed151a925a7e4c9094a6e5f012c15840',\n",
       " 608: 'sg:33936487131d4947b487ee3f41cbf7b7',\n",
       " 609: 'sg:cb04335c033f4ef883a8d508c045d35a',\n",
       " 610: 'sg:43c5ce4e92164caab466120ac681e891',\n",
       " 611: 'sg:684a7dbf9340426486ce6338418bf2b3',\n",
       " 612: 'sg:230ec557d0b340a4a0f68c153c19a6fc',\n",
       " 613: 'sg:93688be4f0ae45068368c251e0bea9fc',\n",
       " 614: 'sg:57028af27d85425fa19a09055fadd60c',\n",
       " 615: 'sg:e06cb2880d894538a1a3562a7a6b8b24',\n",
       " 616: 'sg:8d882fe0dd04447299a9f662d9e5565d',\n",
       " 617: 'sg:902da69381f8435aaf30937f95ac9400',\n",
       " 618: 'sg:93f986b0ed0e411bb0941d14f044dc3e',\n",
       " 619: 'sg:5f5996edb1634374b72cfc56941148a0',\n",
       " 620: 'sg:2402e005c7034c40838db0190880b316',\n",
       " 621: 'sg:785fb448a043451195de77898c5d82ef',\n",
       " 622: 'sg:1354e65cf2a846e2b4195ca50fabc4a9',\n",
       " 623: 'sg:0346553775954e4dbdb2cc33ee30a2f8',\n",
       " 624: 'sg:e4c16cb137494307bba8f6eb54dee834',\n",
       " 625: 'sg:6abb046170c14a498c69efe425d931d5',\n",
       " 626: 'sg:8efafe52df494e84abe295cc758ba7b1',\n",
       " 627: 'sg:a5dea6eecb244a58b9b2993b58609596',\n",
       " 628: 'sg:3f174f9bc130497398260340b3dfaa08',\n",
       " 629: 'sg:7bb953c3cb814419b471765366abe15b',\n",
       " 630: 'sg:b3134a1681eb48d08ec0489351dbb2f8',\n",
       " 631: 'sg:0634632d01764eefadfc4e465a4f87b5',\n",
       " 632: 'sg:29173723e25948d9abc7d4947e2ece8b',\n",
       " 633: 'sg:ee3d1d4659344466aad0bd2c41a79410',\n",
       " 634: 'sg:f6916244a3944f46ad2b872f460dcb84',\n",
       " 635: 'sg:019deecdd6894e2bb836dfc05eb2c278',\n",
       " 636: 'sg:2d86f001ca3644c4af8552b49b1b5578',\n",
       " 637: 'sg:7f5f6192ce814f16ba8125be91e43054',\n",
       " 638: 'sg:af176d312f694ff4815dd0e6eb33b0a3',\n",
       " 639: 'sg:1b0c556997234f638d151cd4212ef3e0',\n",
       " 640: 'sg:85009e202ae047a3bfff3c7eb026fe6c',\n",
       " 641: 'sg:cbf101d033ce4764a8876883faf9cb4e',\n",
       " 642: 'sg:5fb03a3b99844de2a81ba5ea0c97c7f5',\n",
       " 643: 'sg:926328c050c8444994e6eecb884e4cc9',\n",
       " 644: 'sg:5ebd7251c5444992ba3b57cde18794b0',\n",
       " 645: 'sg:685f505f91e64b729f806a383a4d37d4',\n",
       " 646: 'sg:95bee48709e44cf49aaa789ff0818f5d',\n",
       " 647: 'sg:059cb3fd3aca4cef97f1e38e207c9dae',\n",
       " 648: 'sg:70f53213ba6244a581704b85e7eefe9b',\n",
       " 649: 'sg:a45f50521e884caeab08348b59d96ece',\n",
       " 650: 'sg:9ec56346c3a149248073bdaf1d4a68ba',\n",
       " 651: 'sg:3c8a78083c8b40738b43760998b09476',\n",
       " 652: 'sg:1eeb146066ff4ac886be335b5258a1bb',\n",
       " 653: 'sg:a681f071535948e8bcab7130d3cc805c',\n",
       " 654: 'sg:3a07d36737704c94bf3f85e8fe5b5097',\n",
       " 655: 'sg:b1f601b3d7814b3c9c526345b7cefe99',\n",
       " 656: 'sg:feb0d109640d43529f16ce38f81faa91',\n",
       " 657: 'sg:4cef0439168e487da642fd960ff48513',\n",
       " 658: 'sg:7b7cc4bf7b604a04bb4c33f20c7fac4c',\n",
       " 659: 'sg:9cc67ef5a83c423583a0f3679d66640c',\n",
       " 660: 'sg:fa119d14d5fa4baa9f5580b3161a588b',\n",
       " 661: 'sg:0de3bb3451c94b3b89f6d2ef518f8499',\n",
       " 662: 'sg:8828a155db5e4750bc3c4280ea36c948',\n",
       " 663: 'sg:4d96ad12a0d24407904736f7cd9fa1ef',\n",
       " 664: 'sg:62b9a9f5cb7c4d26bdc7cbfc10db5835',\n",
       " 665: 'sg:4eec8521cf11444cb0eca5e01995e264',\n",
       " 666: 'sg:6a8e1c72f5ad41b683abc86427998bc3',\n",
       " 667: 'sg:cb3d6c66f00d43c398eda3b60d0af54f',\n",
       " 668: 'sg:a90102cf3924434d9e3c234594b5ac26',\n",
       " 669: 'sg:0caa87e868a94b699be0457a2f3d89b1',\n",
       " 670: 'sg:19d4d8b593754964a3a2460f2b4bb9ac',\n",
       " 671: 'sg:1d23e7c40e4d473ea0deb9d83f56c582',\n",
       " 672: 'sg:6b2be70bed344ef49b06da2b770b22bd',\n",
       " 673: 'sg:d69d3964ab20414999725ace5bd16d60',\n",
       " 674: 'sg:a99fc1d01dc84353b022554e58caa1d8',\n",
       " 675: 'sg:4f63dcef206144cea014c8ff200e4ded',\n",
       " 676: 'sg:27ed841ed30941ca8445aaf90d1ec536',\n",
       " 677: 'sg:d368670465594d1fb6970209ca6c2577',\n",
       " 678: 'sg:3861645a77a34cf5ba4f6fa19bbfe30c',\n",
       " 679: 'sg:7dbe55102ebc43349bf08af45b9ece5b',\n",
       " 680: 'sg:e32cdef59aea4ee68c2e30758d894ac0',\n",
       " 681: 'sg:53faf636b0bb4636b8069a122a466d9b',\n",
       " 682: 'sg:38bac6bf880e4714acea69122f6beb46',\n",
       " 683: 'sg:574deb23311443569e410275ef8fcb6c',\n",
       " 684: 'sg:a6654c7496cf4f40994c78120ce18fed',\n",
       " 685: 'sg:a0d6a944d71c44d6baf0c2cf558ffef6',\n",
       " 686: 'sg:723ec37ac5d0481593d13a1dad2b4cb1',\n",
       " 687: 'sg:c86c5b93169d41dbbfcc4b70c042b75e',\n",
       " 688: 'sg:d8d246821c904efdba48f38a4481341a',\n",
       " 689: 'sg:7799ca1f2deb40f6a4867d5fe40abaaf',\n",
       " 690: 'sg:b6371d5fb3914134a12a1fbe7558cb2a',\n",
       " 691: 'sg:f8b09ead48ee48c597450ef8f0dd31ad',\n",
       " 692: 'sg:6938e01cd5c0418993b36d49a34463ef',\n",
       " 693: 'sg:c8aabafb8724466383edd839dd6ab808',\n",
       " 694: 'sg:598e72d3fbb647b1b5ef42649913502b',\n",
       " 695: 'sg:dcd1cc0205a345f28e20cb377ccb75a3',\n",
       " 696: 'sg:627ba62ce2214c30a91be65ad70cf1bc',\n",
       " 697: 'sg:a64a9c3cf8a045269897308623bd4984',\n",
       " 698: 'sg:57146fa3295c4e3fa8dfaba0584598df',\n",
       " 699: 'sg:5f43ec2c30b04a83ad2807e7d9de3c41',\n",
       " 700: 'sg:98786f7773194d50ad4f0111e94b9486',\n",
       " 701: 'sg:c674ba2aa8fe40eab1c3d15935fdfb7b',\n",
       " 702: 'sg:7548d84da46a4599a09a647306dcd354',\n",
       " 703: 'sg:27301643ec784180b2bfbefcb562215e',\n",
       " 704: 'sg:808e12d294714beb9228d60f4bfd7658',\n",
       " 705: 'sg:44e99655d671495e89cb7056129a5eea',\n",
       " 706: 'sg:10a6884f84714b16b5ed2a47714722da',\n",
       " 707: 'sg:be806f9859f74567b11fffcc4e3f50b3',\n",
       " 708: 'sg:7fd34865fde64c5db6c04d7e31640809',\n",
       " 709: 'sg:09287219d8a04b5b838c043090b01dcc',\n",
       " 710: 'sg:1509affc6acf4e57b9dfa0dcbe8e04a9',\n",
       " 711: 'sg:344a8580d70d4c39b542aa81267c984f',\n",
       " 712: 'sg:2d519406980a4e0c87aca99a236d430a',\n",
       " 713: 'sg:398b69137bb64ae09a743e3d31441287',\n",
       " 714: 'sg:e5ca27b094cd43a7a89c6efd06349907',\n",
       " 715: 'sg:9eadc9fc18c24b37a3b46214bf326db1',\n",
       " 716: 'sg:a0cc455d3abd4b728e09cd9d20678c9e',\n",
       " 717: 'sg:8c07d2907c1543b4a304ca4d5ec0869f',\n",
       " 718: 'sg:fa655680840841af880bd91ef2aa61e5',\n",
       " 719: 'sg:7fc209e23d38433fbfb39891abdee5a7',\n",
       " 720: 'sg:d615400a7c2d4a1a9c5166576e5ecd69',\n",
       " 721: 'sg:c90fdabc02a649ff81363327413b7a7c',\n",
       " 722: 'sg:655cda971d7e4bacba291387ca3f6f28',\n",
       " 723: 'sg:3468047abd774dd5be9e431a44cf5b04',\n",
       " 724: 'sg:5506c30c17fc48e7adde30c141333910',\n",
       " 725: 'sg:330666be598c45208a2ef57eec63343f',\n",
       " 726: 'sg:c155b4c87f5d4d1595577f68cb444374',\n",
       " 727: 'sg:116a745a9c2d4f15bcdd2323fcc47c0b',\n",
       " 728: 'sg:acb363da909d49cebec1e2614a12dc31',\n",
       " 729: 'sg:69738189e70e433cb87d18eb7cf53648',\n",
       " 730: 'sg:6887cea149514e27a4aabdbac6f70a66',\n",
       " 731: 'sg:9744e3952eab4f59ae475aff7d76fc37',\n",
       " 732: 'sg:18f45db0da9c47699a56700224ab789d',\n",
       " 733: 'sg:62f1879995c74e038cfb89c4be5fa675',\n",
       " 734: 'sg:0442eeddd7234653bfa7d1eb99dfc0f9',\n",
       " 735: 'sg:c1c3056498c44ed69524424f9dc123a1',\n",
       " 736: 'sg:4bbb9d32ddb24244997a7da3bc9a4e7b',\n",
       " 737: 'sg:8325e3df2cb942febb696ef1059f090c',\n",
       " 738: 'sg:0755fd70e6fa4df7b4a1ff5b4b9e2035',\n",
       " 739: 'sg:405646cac68149a6a277d5db3105f62d',\n",
       " 740: 'sg:15fa805a49c147a5b4bcecc85ac68ce4',\n",
       " 741: 'sg:c0d936ed215c43048e9452c1dbb1709e',\n",
       " 742: 'sg:bf934120edf44809aaad3f24389ff3ce',\n",
       " 743: 'sg:b88c56600dcd4e7b9b9bcf26b49de0c3',\n",
       " 744: 'sg:c3f7e3b1ea594973a679e229cfa456b3',\n",
       " 745: 'sg:062bbf0193794badb307e9c2d8a27920',\n",
       " 746: 'sg:bef682ea35634dc7b4120dd7c45b51ab',\n",
       " 747: 'sg:a32a66548b594839b40b6c3d1d8c1d6b',\n",
       " 748: 'sg:00be7265cc8f4bd0a870d57c960e14a0',\n",
       " 749: 'sg:a64b13bd6eab4ba4bab8ec91d28a8c31',\n",
       " 750: 'sg:ecc718d46c214920a76881781f6e86f0',\n",
       " 751: 'sg:5d1313af78c94c2f8d061d89b15d2728',\n",
       " 752: 'sg:58bf38e43866469fbf4019f55f432c7b',\n",
       " 753: 'sg:cf7368d5314d43e3b9ccf4ea1af4c744',\n",
       " 754: 'sg:ba908cbaaf154401b6e62d81d52ea130',\n",
       " 755: 'sg:f00e10a2554a428a90a18bb761c8e605',\n",
       " 756: 'sg:cc702b5444dd4778926bf51c0f86a5c7',\n",
       " 757: 'sg:bca05875ed2f44939f517868e2396a2e',\n",
       " 758: 'sg:61a84d3bd2094298a0481f9fb5256613',\n",
       " 759: 'sg:8a085c2fcacf4b3db7620f1d43e70f58',\n",
       " 760: 'sg:39441702cdcf4d248e8f32070c3ac244',\n",
       " 761: 'sg:319a27bb43ee48d4ace87d039d4096cc',\n",
       " 762: 'sg:922186df20f04c0783b607d0f585bfe9',\n",
       " 763: 'sg:4b1cadf5705d44fb834ce0c0474aac95',\n",
       " 764: 'sg:20d063253c284a7da217416f1da28c62',\n",
       " 765: 'sg:542357686b27471e88a85e0f6e6d76d6',\n",
       " 766: 'sg:da252ca98a3f4d3ab439c72c31a99849',\n",
       " 767: 'sg:f4baf88715bf4e9bb993cf7dedc5fd72',\n",
       " 768: 'sg:6069a4288ddd463697823554cef22fbb',\n",
       " 769: 'sg:e4da1857d0f24c558757a248ab6d020f',\n",
       " 770: 'sg:b037792c1c404324a5e98fe8c5d5810b',\n",
       " 771: 'sg:b847d8b2c4ad473ab64c834b48f1d1f9',\n",
       " 772: 'sg:785bcab8574b43d8b331756b835d7b99',\n",
       " 773: 'sg:c5c3344713df45b3aeea4975ebf062ad',\n",
       " 774: 'sg:e67c773aeac64c0cbbdb9c890e3681d1',\n",
       " 775: 'sg:91be7230d4154a6bbd019139d9ec68da',\n",
       " 776: 'sg:783e37ffb20a45239cae55a6a4c2c5f1',\n",
       " 777: 'sg:a7847ff9b2bd40458cabf4c98ab1eace',\n",
       " 778: 'sg:7e9153e885974c3d967cbbe41c91a39a',\n",
       " 779: 'sg:a18d3ae1d652496a971802d30dff8426',\n",
       " 780: 'sg:8b226653d2834e8bbf4ebb33d881898c',\n",
       " 781: 'sg:adbfd4b4dc8945919acd22e779473865',\n",
       " 782: 'sg:26df452f3bc0402d9125696fb825d7b9',\n",
       " 783: 'sg:b000a15a009440819f8542b7626644a3',\n",
       " 784: 'sg:5aa2822d1a9e4418868c2240d108cc88',\n",
       " 785: 'sg:e53d03ea21034e008366a9b1c202e25e',\n",
       " 786: 'sg:000c075b46f24e24a5d7b5a16d3035fc',\n",
       " 787: 'sg:0a636303ae854febb0ee6f88c44f6181',\n",
       " 788: 'sg:b07c4eefcfb34337b60507f16ed0b1cb',\n",
       " 789: 'sg:64e121b13d5645cfb46b135e2ebfba51',\n",
       " 790: 'sg:6a3b278510df4fdd8884eb7f4da4dd67',\n",
       " 791: 'sg:81156a3d2ddc40e2b3fd7c16dfd98d76',\n",
       " 792: 'sg:86c5177bf8d940f9a53bae890887575f',\n",
       " 793: 'sg:376a19c3f5e8477880142eee28848010',\n",
       " 794: 'sg:612aa70197e34a5abf92d941b297433c',\n",
       " 795: 'sg:9acfa5765f564ab5ab512060a7a9edd0',\n",
       " 796: 'sg:658b3ff3b04c45008fbefdbbf94eab37',\n",
       " 797: 'sg:afdac24eab9a4aa4ba378bc5c7b1af69',\n",
       " 798: 'sg:9729f18b8f4c4efeb72cc88b34acc8a7',\n",
       " 799: 'sg:eadc6f84cda042228a986cab164ec047',\n",
       " 800: 'sg:49f9ea8e70d042a88f2bb634c9609a73',\n",
       " 801: 'sg:11088e64f01d4730929e694c287e7a32',\n",
       " 802: 'sg:cafcf3ccbc684c4a9063bc335692c092',\n",
       " 803: 'sg:d17443bc12f24454acb64742b2a30c50',\n",
       " 804: 'sg:4014622e72e0486398c2950d3ae5c48c',\n",
       " 805: 'sg:382b570906134d9c8feef09de0b1bbf4',\n",
       " 806: 'sg:fc3372a5209a413aa825f4be24e73db3',\n",
       " 807: 'sg:45fca33b27014037bb892c593863ffa5',\n",
       " 808: 'sg:a95367ba7be24ef68e08e8dd7548ab56',\n",
       " 809: 'sg:e2845f3af4484fb3a491bff69018eb2b',\n",
       " 810: 'sg:9d70fbddb3fa42659bd0ced84091b202',\n",
       " 811: 'sg:7811427aacaf4976a6386216b8e6ff53',\n",
       " 812: 'sg:cf0e4dec1c7e404f95ae0baa275269c1',\n",
       " 813: 'sg:a22d7766cd7e435c86c879b88498afa8',\n",
       " 814: 'sg:88ca0dcf9a684741b8a4bb4417606fab',\n",
       " 815: 'sg:c5b75c5ac7c344348f8fb3eb5cda4e6a',\n",
       " 816: 'sg:77ccbaf93c7349109218a24c7baa9909',\n",
       " 817: 'sg:d06fe2e879144f22961f56a01713cc70',\n",
       " 818: 'sg:1f1d970348744bb5a924e6c6708e0135',\n",
       " 819: 'sg:13e1cdd407d04b29846ae439f18d356d',\n",
       " 820: 'sg:dbbc4ca31b954796956dfb639a348853',\n",
       " 821: 'sg:f4ec79162f5040d8a23883c12653e83d',\n",
       " 822: 'sg:ab9eae72c2314cb5982c493fc53db0a5',\n",
       " 823: 'sg:58526ebc53a346fa9e5e8d03dac50441',\n",
       " 824: 'sg:2ae0123bd8f74b5ba7cf9600185890b5',\n",
       " 825: 'sg:6791894e45a34fdda32775175fc0cef0',\n",
       " 826: 'sg:45de52b561b64a3a8dd886cf7de34bdc',\n",
       " 827: 'sg:540d8d8b760f4ebd98455d6e8ceb9f62',\n",
       " 828: 'sg:81e829812d4a453395274de975d8e5d4',\n",
       " 829: 'sg:7ab8e52e94124b129dc2cd993197a82b',\n",
       " 830: 'sg:d431189520c44899bcecef4e3a9721f0',\n",
       " 831: 'sg:a9aaafb8245f45e38314ccbdbb78bf86',\n",
       " 832: 'sg:3850d81882fd43c4b9c720cf8c061ffc',\n",
       " 833: 'sg:90f80a5710534b749481ca86fa9a9062',\n",
       " 834: 'sg:efb5bd0481f94c9ca1c208c4f8ce0d93',\n",
       " 835: 'sg:f1cbbfce2f424d7fb05181e0ad6c3a23',\n",
       " 836: 'sg:636256942f3243079480def48bd8a687',\n",
       " 837: 'sg:60623ff7c2fd47e999c8767349cc5757',\n",
       " 838: 'sg:083ec7f426ea4e95a8c8300ed4923abb',\n",
       " 839: 'sg:fa1186e0cd6143ac91b1cce88046f8b6',\n",
       " 840: 'sg:ef402fac1cea477fb655db027c25f568',\n",
       " 841: 'sg:6305109b74324cfbbc52d61209f56b96',\n",
       " 842: 'sg:955f5398979f46c78f20f46de8b138fe',\n",
       " 843: 'sg:c4556fa8a17d4e2d954a0e293619c760',\n",
       " 844: 'sg:e57f72d3b4224c9a87485f1f53b68035',\n",
       " 845: 'sg:2fcb63f85904491394e0713cb6dc97f7',\n",
       " 846: 'sg:d37f7f0f05654845a803e2f521de917e',\n",
       " 847: 'sg:e1e557305f3345618b49d44b31fc5eb2',\n",
       " 848: 'sg:59e6d45c430f4804a85b0cbe1ca9a5ba',\n",
       " 849: 'sg:0ad50810a66f40a98ec9b79b32d159c0',\n",
       " 850: 'sg:de0bc3aea8f640beaf3a9512d66ce199',\n",
       " 851: 'sg:ef1c526c52424210b8d6aa4496be9538',\n",
       " 852: 'sg:2821436873a84c14bfce69fd863fad6b',\n",
       " 853: 'sg:d0c92f1a273943de88d66cab945dfbc6',\n",
       " 854: 'sg:f3888347e0bd40969b15f76aa473b87e',\n",
       " 855: 'sg:4ab64c0ed7bb4696a0d4505df3d0c10e',\n",
       " 856: 'sg:6b7583bbc5ad421ebbf48285bdbc9462',\n",
       " 857: 'sg:fe8115c6fd3d471bb3e29653a26cdb7e',\n",
       " 858: 'sg:28accedb9db7473d9f5047a5183300da',\n",
       " 859: 'sg:cdca42883c42440a8994975bc7a33bf5',\n",
       " 860: 'sg:33b5ffbd88cc46209401856f71d5d41b',\n",
       " 861: 'sg:454ca436865f4a418327c5448752b2fa',\n",
       " 862: 'sg:b9befa6341ec4053a00d7abb406a0911',\n",
       " 863: 'sg:d823ad65db034876bfb6bdd357e3980b',\n",
       " 864: 'sg:b6582e529f1548d38bceaac0f4eb9c3b',\n",
       " 865: 'sg:a0cb662ce8eb41d69bc473efb496a47e',\n",
       " 866: 'sg:909ae3b6b17441779de914610043407e',\n",
       " 867: 'sg:35baa7e3915045ec8be2d05b83b1713a',\n",
       " 868: 'sg:a09a81bba5084f2fa056c6494f091c50',\n",
       " 869: 'sg:591dd861d38c41cdbbcb31dacd7569ef',\n",
       " 870: 'sg:f079bb6387e84ec783f3977c85a9e044',\n",
       " 871: 'sg:74435dd972f744c3b6f282dcc00bec29',\n",
       " 872: 'sg:19fda23aaea549d695086f8a9d963824',\n",
       " 873: 'sg:c91d97765e974b7dba2c04a9762b3ecc',\n",
       " 874: 'sg:ee98e00ee3234a2ea520afa8ccd50295',\n",
       " 875: 'sg:af7feb0edafb48e38661af36376eb57c',\n",
       " 876: 'sg:9174fa94a4464793911a667088ee4982',\n",
       " 877: 'sg:fb3d982542ee4a1a9a6cfa601333fbde',\n",
       " 878: 'sg:9fe2b1e271df47deb36569a559665cab',\n",
       " 879: 'sg:d9acd741a45b4044b08e26f2c5c9c023',\n",
       " 880: 'sg:e361907fb87944ac8f1199ccda4d8bf3',\n",
       " 881: 'sg:70c06a765aba4d4c87f3e6d53eed0386',\n",
       " 882: 'sg:bd6fc46082eb434cb75c8cb9c34f8991',\n",
       " 883: 'sg:b51e97cccd604fd19d7e19d4995e736a',\n",
       " 884: 'sg:0f9deda4416d4ab7bc30ad27dc217b85',\n",
       " 885: 'sg:4ecea42428154ec6b4398753532cbcb0',\n",
       " 886: 'sg:9f5fd7d932804c6396cef4b7eecde6e6',\n",
       " 887: 'sg:9faf8c51d303465d94baf6dbb3408cbf',\n",
       " 888: 'sg:5cfb038581fc4e73b239106852d5b91b',\n",
       " 889: 'sg:3ace166d76b24074810370c8ba2667b4',\n",
       " 890: 'sg:1006b49ab478417fa14d60319f612540',\n",
       " 891: 'sg:7b2d39e56b4b418794a79c5ae570708c',\n",
       " 892: 'sg:00dd6b4b23be4f37865326136f6459fd',\n",
       " 893: 'sg:2c458019f46c4bf098b6cc60426ce2b6',\n",
       " 894: 'sg:5c295aafb6d249ab8da73ac400c8d266',\n",
       " 895: 'sg:b77a9be300204be0bec64e8bc73d86a2',\n",
       " 896: 'sg:2c56c0b26a5d4ecb924bfe685fca963a',\n",
       " 897: 'sg:db52ece56b664172a8a86a86b5827da2',\n",
       " 898: 'sg:3a8c29519c13488181551f4e29e62fc0',\n",
       " 899: 'sg:509afe1dd36f4f65a206533602adb75f',\n",
       " 900: 'sg:c022b4195e5841ae942e064d59a113cc',\n",
       " 901: 'sg:31ac0ead507f4aab908091233babad30',\n",
       " 902: 'sg:7ea69c9d7c5945ddb9ecaa1b34c77d94',\n",
       " 903: 'sg:bc2a479f61c24a72a91090990985cc42',\n",
       " 904: 'sg:b810a25926924176b07ca87d88aa7bbf',\n",
       " 905: 'sg:2e500131ef0c4a41bcb982cd9631194c',\n",
       " 906: 'sg:7b544955ee474bfbbfd81af7085d973a',\n",
       " 907: 'sg:598df4916ce749fbbdc2a19584f615e0',\n",
       " 908: 'sg:7a31d868bdee41cf83a63fe3864c81ce',\n",
       " 909: 'sg:48c86e9896e04e06ba3009876c9dea68',\n",
       " 910: 'sg:7adf4081f52b48f3a8c3488dc6942543',\n",
       " 911: 'sg:d35c0c4a12a94145bcd91f657f6e7dd3',\n",
       " 912: 'sg:2abbe7e1eb1d46cd98d4abe88443b7c1',\n",
       " 913: 'sg:87235f873bf2416bab6dbc666e11435a',\n",
       " 914: 'sg:36d91194a7f04cd1ae6e428eb31c11c1',\n",
       " 915: 'sg:40c75b4839e4425eb17c65e542e7529d',\n",
       " 916: 'sg:ed90ccd729594b7b85beeb93b84742aa',\n",
       " 917: 'sg:39764b4100a54f24b93fe81f52ab56ee',\n",
       " 918: 'sg:364a7bbd851742d185a91c5f12d4572e',\n",
       " 919: 'sg:72c395f57edf462195bf40a558d701bb',\n",
       " 920: 'sg:cacb04ac769b483d8b1b503e6ec43ce3',\n",
       " 921: 'sg:bba292b51ef4411aa84da970001ef758',\n",
       " 922: 'sg:80bb42502b51444994998d6f2390b89f',\n",
       " 923: 'sg:554c1119468d42d28929c28f48503b4e',\n",
       " 924: 'sg:9af624f782044913ac10637149d6ceba',\n",
       " 925: 'sg:4de146740a9649c78c50cd957ae76662',\n",
       " 926: 'sg:9a1fab9abd2b4cb59e27b25a6d0f5c70',\n",
       " 927: 'sg:c48e3039a58f454ca6b6bf1375025df1',\n",
       " 928: 'sg:89ac4e8ab4b64670bc4211f3843da090',\n",
       " 929: 'sg:2ed284f8936343019cfbf3bb262fa0d1',\n",
       " 930: 'sg:014487dec82f4742b6cd37cc471d4481',\n",
       " 931: 'sg:db2fe7d71f534eaaad61cbe8f159de3d',\n",
       " 932: 'sg:fcfb35341527403a9769875a8f79e7e8',\n",
       " 933: 'sg:bd75ec26d4034ab090e267488f0fa7fe',\n",
       " 934: 'sg:6a706c86e9bf4475be9ab1542c289744',\n",
       " 935: 'sg:cf9544348e3a47689222a3b5112edfe9',\n",
       " 936: 'sg:d98e0b62c1c24ec8aa307e6e4ff9af0f',\n",
       " 937: 'sg:eb5ccf372373405a964c2c02d1bb5b1f',\n",
       " 938: 'sg:f4d54810ee624e47b57bb3bcd6e487d8',\n",
       " 939: 'sg:4944b488797e49a88373aa12c2860a79',\n",
       " 940: 'sg:a549c0b19f9742b8a62bd5672c400ee0',\n",
       " 941: 'sg:359830fdbc2741b4b19d30b6590e18e3',\n",
       " 942: 'sg:a7db1b526dff4145a8797dcaa949feaf',\n",
       " 943: 'sg:5c06d11a130449bc91bd37385480ce4f',\n",
       " 944: 'sg:1793b05c175246a7866186177beddb81',\n",
       " 945: 'sg:9f29781c5ddb41ceb95f85d55bf9e01b',\n",
       " 946: 'sg:42b3334b09524841b74699eb69f04159',\n",
       " 947: 'sg:f8eb66070f734b639f0f4670ed43d2c9',\n",
       " 948: 'sg:78606b8812504841ad500ccb25ed9da1',\n",
       " 949: 'sg:d52b50e2c99d470593c70d230e43b233',\n",
       " 950: 'sg:49569d155b3f4fb6a3f38ca73fdd0e61',\n",
       " 951: 'sg:055c518d283941ea8e78e29ce02ab5a3',\n",
       " 952: 'sg:a8fdef05305d48b1803acf7fc4c01928',\n",
       " 953: 'sg:d9a3aea6734343018025edd85eef1fe4',\n",
       " 954: 'sg:4c9fccc265664eedb4ed489990155101',\n",
       " 955: 'sg:ef5df1a4fb334075b7c1cf9b0fa23ad5',\n",
       " 956: 'sg:db0e00e4b38246908a6bf486c453dd22',\n",
       " 957: 'sg:306cc4a65aca49529459787bb83fa0d9',\n",
       " 958: 'sg:f106db4b1a954771a23515595285cd2a',\n",
       " 959: 'sg:a85b68b44777435586fd39c8c7d58bf7',\n",
       " 960: 'sg:71cbaaedb5fb47b5a3f48f56f521a951',\n",
       " 961: 'sg:d1364bea4a964fa7be0e87efa9ee1cb3',\n",
       " 962: 'sg:1eb06f6a4db84cdca0830f23962b884f',\n",
       " 963: 'sg:78ff609e25d247319dfaa4d451abb2c9',\n",
       " 964: 'sg:04ab95a10afc4706b35c94ac4f1bbd65',\n",
       " 965: 'sg:cacba4cc31d84f17af56c3ff2e9186c5',\n",
       " 966: 'sg:f7884cd48e6c438aa5ef024ab38a1fcb',\n",
       " 967: 'sg:dcd603c4a0894581ac186f023248294c',\n",
       " 968: 'sg:5fc6d5bfd9e04ae3a94344cac22fa846',\n",
       " 969: 'sg:4ae94936da814e488bc201a2c322042b',\n",
       " 970: 'sg:662df20d407c4ded9902281419983410',\n",
       " 971: 'sg:608cb1c7a37c43e6af3db5646e1cc1c1',\n",
       " 972: 'sg:4dda3394f8b64ea28b30f3d9dcc446f3',\n",
       " 973: 'sg:e252a3aca45e4e21b37519b2fa63c015',\n",
       " 974: 'sg:466a202fc3d349f98884d502b05c81aa',\n",
       " 975: 'sg:f5822337a3494d72bf6e49e259309767',\n",
       " 976: 'sg:704fee3d3868480aae6a6e1a5fe905b5',\n",
       " 977: 'sg:429013103b4f44848e731e2c72c1974b',\n",
       " 978: 'sg:cec61d469bca419c9bcd56a6ee3d1a7d',\n",
       " 979: 'sg:bded04f5dc6848a68388bf0a91ed637b',\n",
       " 980: 'sg:9ac1502ed3ad4690bca97e249f645742',\n",
       " 981: 'sg:7accea9aa2dc4652adc4e0282692eb41',\n",
       " 982: 'sg:66da4f31c833497fa7a9dd7bc86eda83',\n",
       " 983: 'sg:f36c198c436c42789e1cc48ce7826ea3',\n",
       " 984: 'sg:e778471aace64eba9b9c86be9c9532a4',\n",
       " 985: 'sg:7c44415b5b3e46ff868ead8583ebe794',\n",
       " 986: 'sg:3e0ca714e6ea4ba0b6aee539514c7a96',\n",
       " 987: 'sg:56f005acc99e484abbee40dc4846bffb',\n",
       " 988: 'sg:988bb80d9e6f40febd28accbc0e48605',\n",
       " 989: 'sg:df9deebca5ec4cf8a9c16aad518e49ca',\n",
       " 990: 'sg:8404528265dc49289bcdac05fa647bd1',\n",
       " 991: 'sg:ab29e72a14aa497ea3dde337fc999843',\n",
       " 992: 'sg:efd7e1944dc2405aab9c7e9e95cd358d',\n",
       " 993: 'sg:17f08447110348dbadb79574a62d7cdb',\n",
       " 994: 'sg:9f547f3f2e264dc29455cd06fa54689b',\n",
       " 995: 'sg:2f54048e21c54ca488345645643c4522',\n",
       " 996: 'sg:12eecaebe52a4ef98e663b53442d6cce',\n",
       " 997: 'sg:52e356a26e264cadab07186589f52cf8',\n",
       " 998: 'sg:b7d8b923af8146d489c4b935cab2dc93',\n",
       " 999: 'sg:aaf9864f3fc44eab963e1577ed01f397',\n",
       " ...}"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "poi_to_place_id_category"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Enter the top_category (POI category) that you would like to analyze\n",
    "category = 'Restaurants and Other Eating Places'\n",
    "#Enter the number of days that you would like to analyze\n",
    "num_of_days = 5\n",
    "num_of_hours = num_of_days * 24"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "#initiate empty lists for x axis and y axis data\n",
    "x = []\n",
    "y = []\n",
    "\n",
    "sum_of_day = 0\n",
    "day_count = 0\n",
    "# loop for num_of_hours \n",
    "for i in range(0,num_of_hours):\n",
    "    if (i % 24 ==0):\n",
    "        x.insert(day_count,day_count)\n",
    "        y.insert(day_count,sum_of_day)\n",
    "        day_count += 1\n",
    "        sum_of_day = 0\n",
    "    \n",
    "    hourVisitMatrix = poi_cbg_visit_matrix_history[i] #access 2D data for a given hour in 3d visit matrix, 'i' is the hour\n",
    "    dfVisitMatrix = pd.DataFrame(hourVisitMatrix.todense()) #turn it into a dataframe that we can access\n",
    "    num_of_pois = len(dfVisitMatrix) #number of pois of each visit matrix\n",
    "\n",
    "    for j in range (0,num_of_pois):\n",
    "        safe_graph_id = poi_to_place_id_category[j]    \n",
    "                  \n",
    "        for row in core_file:\n",
    "            if(row[1]==safe_graph_id and row[6] == category): \n",
    "                print(\"happy\")  \n",
    "                sum_of_day += dfVisitMatrix.sum(axis=1)      \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(x,y)\n",
    "plt.xlabel('num of hours')\n",
    "plt.ylabel('sum of POIs')\n",
    "plt.title('sum of POIs for CBG#24 for x days')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": "null",
   "metadata": {},
   "outputs": [],
   "source": [
    "# #code to print out entire 2d visit matrix\n",
    "\n",
    "# hourVisitMatrix = poi_cbg_visit_matrix_history[1]\n",
    "# print(hourVisitMatrix)\n",
    "# print(\"\\n \")\n",
    "# dfVisitMatrix = pd.DataFrame(hourVisitMatrix.todense())\n",
    "# #column first, then row num\n",
    "# # print(dfVisitMatrix[233][6869])\n",
    "\n",
    "# #print out entire 2d dataframe\n",
    "# print(dfVisitMatrix)\n",
    "\n",
    "\n",
    "\n",
    "# for row in core_file:\n",
    "#     if(row[1] == \"sg:22372f32c6af4b659e107c0eded6f3b4\"):\n",
    "#         print(1)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8 (py38)",
   "language": "python",
   "name": "py38"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
